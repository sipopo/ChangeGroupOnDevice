//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.17929.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="PrincipalManagementSoap", Namespace="http://www.microsoft.com/iptv/bss")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Principal1))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Principal))]
public partial class PrincipalManagementSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback CreateGroupOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteGroupOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadGroupOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateGroupStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateGroupTypeOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateGroupPrincipalsOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateAccountOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteAccountOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadAccountOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountDevicesOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountUsersOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountPinOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountCreditLimitOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountTimeZoneOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountDVRStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountRecordingDeviceIdOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountHDStreamsOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountSDStreamsOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountExternalIdOperationCompleted;
    
    private System.Threading.SendOrPostCallback ProvisionDeviceOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateUserPinOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateUserStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateDeviceStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateDeviceExternalIdOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateDevicePinOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateDevicePinByTypeOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteDevicePinByTypeOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteDevicePinOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateForbiddenPinsOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadDevicePinsOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadForbiddenPinsOperationCompleted;
    
    private System.Threading.SendOrPostCallback ResetDevicePinByTypeOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateDeviceVersionOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadAllDeviceValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteAllDeviceValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateDeviceValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateDeviceValuesAndNotifyOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadDeviceOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadDeviceByGuidOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateEnableDateForAllPinsOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateEnableDateForPinByTypeOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadDeviceGroupsOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadAccountGroupsOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadAllAccountValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteAccountValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountValuesAndNotifyOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteAllAccountValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteAccountValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateAccountStreamAllocationsOperationCompleted;
    
    /// <remarks/>
    public PrincipalManagementSoap() {
        this.Url = "http://78.107.199.132/bss/PrincipalManagement.asmx";
    }
    
    /// <remarks/>
    public event CreateGroupCompletedEventHandler CreateGroupCompleted;
    
    /// <remarks/>
    public event DeleteGroupCompletedEventHandler DeleteGroupCompleted;
    
    /// <remarks/>
    public event ReadGroupCompletedEventHandler ReadGroupCompleted;
    
    /// <remarks/>
    public event UpdateGroupStatusCompletedEventHandler UpdateGroupStatusCompleted;
    
    /// <remarks/>
    public event UpdateGroupTypeCompletedEventHandler UpdateGroupTypeCompleted;
    
    /// <remarks/>
    public event UpdateGroupPrincipalsCompletedEventHandler UpdateGroupPrincipalsCompleted;
    
    /// <remarks/>
    public event CreateAccountCompletedEventHandler CreateAccountCompleted;
    
    /// <remarks/>
    public event DeleteAccountCompletedEventHandler DeleteAccountCompleted;
    
    /// <remarks/>
    public event ReadAccountCompletedEventHandler ReadAccountCompleted;
    
    /// <remarks/>
    public event UpdateAccountDevicesCompletedEventHandler UpdateAccountDevicesCompleted;
    
    /// <remarks/>
    public event UpdateAccountUsersCompletedEventHandler UpdateAccountUsersCompleted;
    
    /// <remarks/>
    public event UpdateAccountStatusCompletedEventHandler UpdateAccountStatusCompleted;
    
    /// <remarks/>
    public event UpdateAccountPinCompletedEventHandler UpdateAccountPinCompleted;
    
    /// <remarks/>
    public event UpdateAccountCreditLimitCompletedEventHandler UpdateAccountCreditLimitCompleted;
    
    /// <remarks/>
    public event UpdateAccountTimeZoneCompletedEventHandler UpdateAccountTimeZoneCompleted;
    
    /// <remarks/>
    public event UpdateAccountDVRStatusCompletedEventHandler UpdateAccountDVRStatusCompleted;
    
    /// <remarks/>
    public event UpdateAccountRecordingDeviceIdCompletedEventHandler UpdateAccountRecordingDeviceIdCompleted;
    
    /// <remarks/>
    public event UpdateAccountHDStreamsCompletedEventHandler UpdateAccountHDStreamsCompleted;
    
    /// <remarks/>
    public event UpdateAccountSDStreamsCompletedEventHandler UpdateAccountSDStreamsCompleted;
    
    /// <remarks/>
    public event UpdateAccountExternalIdCompletedEventHandler UpdateAccountExternalIdCompleted;
    
    /// <remarks/>
    public event ProvisionDeviceCompletedEventHandler ProvisionDeviceCompleted;
    
    /// <remarks/>
    public event DeleteUserCompletedEventHandler DeleteUserCompleted;
    
    /// <remarks/>
    public event ReadUserCompletedEventHandler ReadUserCompleted;
    
    /// <remarks/>
    public event UpdateUserPinCompletedEventHandler UpdateUserPinCompleted;
    
    /// <remarks/>
    public event UpdateUserStatusCompletedEventHandler UpdateUserStatusCompleted;
    
    /// <remarks/>
    public event UpdateDeviceStatusCompletedEventHandler UpdateDeviceStatusCompleted;
    
    /// <remarks/>
    public event UpdateDeviceExternalIdCompletedEventHandler UpdateDeviceExternalIdCompleted;
    
    /// <remarks/>
    public event UpdateDevicePinCompletedEventHandler UpdateDevicePinCompleted;
    
    /// <remarks/>
    public event UpdateDevicePinByTypeCompletedEventHandler UpdateDevicePinByTypeCompleted;
    
    /// <remarks/>
    public event DeleteDevicePinByTypeCompletedEventHandler DeleteDevicePinByTypeCompleted;
    
    /// <remarks/>
    public event DeleteDevicePinCompletedEventHandler DeleteDevicePinCompleted;
    
    /// <remarks/>
    public event UpdateForbiddenPinsCompletedEventHandler UpdateForbiddenPinsCompleted;
    
    /// <remarks/>
    public event ReadDevicePinsCompletedEventHandler ReadDevicePinsCompleted;
    
    /// <remarks/>
    public event ReadForbiddenPinsCompletedEventHandler ReadForbiddenPinsCompleted;
    
    /// <remarks/>
    public event ResetDevicePinByTypeCompletedEventHandler ResetDevicePinByTypeCompleted;
    
    /// <remarks/>
    public event UpdateDeviceVersionCompletedEventHandler UpdateDeviceVersionCompleted;
    
    /// <remarks/>
    public event ReadAllDeviceValuesCompletedEventHandler ReadAllDeviceValuesCompleted;
    
    /// <remarks/>
    public event DeleteAllDeviceValuesCompletedEventHandler DeleteAllDeviceValuesCompleted;
    
    /// <remarks/>
    public event UpdateDeviceValuesCompletedEventHandler UpdateDeviceValuesCompleted;
    
    /// <remarks/>
    public event UpdateDeviceValuesAndNotifyCompletedEventHandler UpdateDeviceValuesAndNotifyCompleted;
    
    /// <remarks/>
    public event ReadDeviceCompletedEventHandler ReadDeviceCompleted;
    
    /// <remarks/>
    public event ReadDeviceByGuidCompletedEventHandler ReadDeviceByGuidCompleted;
    
    /// <remarks/>
    public event UpdateEnableDateForAllPinsCompletedEventHandler UpdateEnableDateForAllPinsCompleted;
    
    /// <remarks/>
    public event UpdateEnableDateForPinByTypeCompletedEventHandler UpdateEnableDateForPinByTypeCompleted;
    
    /// <remarks/>
    public event ReadDeviceGroupsCompletedEventHandler ReadDeviceGroupsCompleted;
    
    /// <remarks/>
    public event ReadAccountGroupsCompletedEventHandler ReadAccountGroupsCompleted;
    
    /// <remarks/>
    public event ReadAllAccountValuesCompletedEventHandler ReadAllAccountValuesCompleted;
    
    /// <remarks/>
    public event UpdateAccountValuesCompletedEventHandler UpdateAccountValuesCompleted;
    
    /// <remarks/>
    public event DeleteAccountValuesCompletedEventHandler DeleteAccountValuesCompleted;
    
    /// <remarks/>
    public event UpdateAccountValuesAndNotifyCompletedEventHandler UpdateAccountValuesAndNotifyCompleted;
    
    /// <remarks/>
    public event DeleteAllAccountValuesCompletedEventHandler DeleteAllAccountValuesCompleted;
    
    /// <remarks/>
    public event DeleteAccountValueCompletedEventHandler DeleteAccountValueCompleted;
    
    /// <remarks/>
    public event UpdateAccountStreamAllocationsCompletedEventHandler UpdateAccountStreamAllocationsCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/CreateGroup", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void CreateGroup(Group group) {
        this.Invoke("CreateGroup", new object[] {
                    group});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateGroup(Group group, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateGroup", new object[] {
                    group}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndCreateGroup(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void CreateGroupAsync(Group group) {
        this.CreateGroupAsync(group, null);
    }
    
    /// <remarks/>
    public void CreateGroupAsync(Group group, object userState) {
        if ((this.CreateGroupOperationCompleted == null)) {
            this.CreateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGroupOperationCompleted);
        }
        this.InvokeAsync("CreateGroup", new object[] {
                    group}, this.CreateGroupOperationCompleted, userState);
    }
    
    private void OnCreateGroupOperationCompleted(object arg) {
        if ((this.CreateGroupCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/DeleteGroup", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteGroup(string externalId) {
        this.Invoke("DeleteGroup", new object[] {
                    externalId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteGroup(string externalId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteGroup", new object[] {
                    externalId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteGroup(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteGroupAsync(string externalId) {
        this.DeleteGroupAsync(externalId, null);
    }
    
    /// <remarks/>
    public void DeleteGroupAsync(string externalId, object userState) {
        if ((this.DeleteGroupOperationCompleted == null)) {
            this.DeleteGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGroupOperationCompleted);
        }
        this.InvokeAsync("DeleteGroup", new object[] {
                    externalId}, this.DeleteGroupOperationCompleted, userState);
    }
    
    private void OnDeleteGroupOperationCompleted(object arg) {
        if ((this.DeleteGroupCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ReadGroup", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Group[] ReadGroup(string externalId) {
        object[] results = this.Invoke("ReadGroup", new object[] {
                    externalId});
        return ((Group[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadGroup(string externalId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadGroup", new object[] {
                    externalId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Group[] EndReadGroup(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Group[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadGroupAsync(string externalId) {
        this.ReadGroupAsync(externalId, null);
    }
    
    /// <remarks/>
    public void ReadGroupAsync(string externalId, object userState) {
        if ((this.ReadGroupOperationCompleted == null)) {
            this.ReadGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadGroupOperationCompleted);
        }
        this.InvokeAsync("ReadGroup", new object[] {
                    externalId}, this.ReadGroupOperationCompleted, userState);
    }
    
    private void OnReadGroupOperationCompleted(object arg) {
        if ((this.ReadGroupCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadGroupCompleted(this, new ReadGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateGroupStatus", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateGroupStatus(Group group) {
        this.Invoke("UpdateGroupStatus", new object[] {
                    group});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateGroupStatus(Group group, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateGroupStatus", new object[] {
                    group}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateGroupStatus(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateGroupStatusAsync(Group group) {
        this.UpdateGroupStatusAsync(group, null);
    }
    
    /// <remarks/>
    public void UpdateGroupStatusAsync(Group group, object userState) {
        if ((this.UpdateGroupStatusOperationCompleted == null)) {
            this.UpdateGroupStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupStatusOperationCompleted);
        }
        this.InvokeAsync("UpdateGroupStatus", new object[] {
                    group}, this.UpdateGroupStatusOperationCompleted, userState);
    }
    
    private void OnUpdateGroupStatusOperationCompleted(object arg) {
        if ((this.UpdateGroupStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateGroupStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateGroupType", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateGroupType(Group group) {
        this.Invoke("UpdateGroupType", new object[] {
                    group});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateGroupType(Group group, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateGroupType", new object[] {
                    group}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateGroupType(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateGroupTypeAsync(Group group) {
        this.UpdateGroupTypeAsync(group, null);
    }
    
    /// <remarks/>
    public void UpdateGroupTypeAsync(Group group, object userState) {
        if ((this.UpdateGroupTypeOperationCompleted == null)) {
            this.UpdateGroupTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupTypeOperationCompleted);
        }
        this.InvokeAsync("UpdateGroupType", new object[] {
                    group}, this.UpdateGroupTypeOperationCompleted, userState);
    }
    
    private void OnUpdateGroupTypeOperationCompleted(object arg) {
        if ((this.UpdateGroupTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateGroupTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateGroupPrincipals", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateGroupPrincipals(Group group, bool remove) {
        this.Invoke("UpdateGroupPrincipals", new object[] {
                    group,
                    remove});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateGroupPrincipals(Group group, bool remove, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateGroupPrincipals", new object[] {
                    group,
                    remove}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateGroupPrincipals(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateGroupPrincipalsAsync(Group group, bool remove) {
        this.UpdateGroupPrincipalsAsync(group, remove, null);
    }
    
    /// <remarks/>
    public void UpdateGroupPrincipalsAsync(Group group, bool remove, object userState) {
        if ((this.UpdateGroupPrincipalsOperationCompleted == null)) {
            this.UpdateGroupPrincipalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupPrincipalsOperationCompleted);
        }
        this.InvokeAsync("UpdateGroupPrincipals", new object[] {
                    group,
                    remove}, this.UpdateGroupPrincipalsOperationCompleted, userState);
    }
    
    private void OnUpdateGroupPrincipalsOperationCompleted(object arg) {
        if ((this.UpdateGroupPrincipalsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateGroupPrincipalsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/CreateAccount", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void CreateAccount(Account account) {
        this.Invoke("CreateAccount", new object[] {
                    account});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateAccount(Account account, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateAccount", new object[] {
                    account}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndCreateAccount(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void CreateAccountAsync(Account account) {
        this.CreateAccountAsync(account, null);
    }
    
    /// <remarks/>
    public void CreateAccountAsync(Account account, object userState) {
        if ((this.CreateAccountOperationCompleted == null)) {
            this.CreateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountOperationCompleted);
        }
        this.InvokeAsync("CreateAccount", new object[] {
                    account}, this.CreateAccountOperationCompleted, userState);
    }
    
    private void OnCreateAccountOperationCompleted(object arg) {
        if ((this.CreateAccountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/DeleteAccount", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteAccount(string externalId) {
        this.Invoke("DeleteAccount", new object[] {
                    externalId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteAccount(string externalId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteAccount", new object[] {
                    externalId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteAccount(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteAccountAsync(string externalId) {
        this.DeleteAccountAsync(externalId, null);
    }
    
    /// <remarks/>
    public void DeleteAccountAsync(string externalId, object userState) {
        if ((this.DeleteAccountOperationCompleted == null)) {
            this.DeleteAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountOperationCompleted);
        }
        this.InvokeAsync("DeleteAccount", new object[] {
                    externalId}, this.DeleteAccountOperationCompleted, userState);
    }
    
    private void OnDeleteAccountOperationCompleted(object arg) {
        if ((this.DeleteAccountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ReadAccount", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Account[] ReadAccount(string externalId) {
        object[] results = this.Invoke("ReadAccount", new object[] {
                    externalId});
        return ((Account[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadAccount(string externalId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadAccount", new object[] {
                    externalId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Account[] EndReadAccount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Account[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadAccountAsync(string externalId) {
        this.ReadAccountAsync(externalId, null);
    }
    
    /// <remarks/>
    public void ReadAccountAsync(string externalId, object userState) {
        if ((this.ReadAccountOperationCompleted == null)) {
            this.ReadAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAccountOperationCompleted);
        }
        this.InvokeAsync("ReadAccount", new object[] {
                    externalId}, this.ReadAccountOperationCompleted, userState);
    }
    
    private void OnReadAccountOperationCompleted(object arg) {
        if ((this.ReadAccountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadAccountCompleted(this, new ReadAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountDevices", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountDevices(Account account, bool remove) {
        this.Invoke("UpdateAccountDevices", new object[] {
                    account,
                    remove});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountDevices(Account account, bool remove, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountDevices", new object[] {
                    account,
                    remove}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountDevices(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountDevicesAsync(Account account, bool remove) {
        this.UpdateAccountDevicesAsync(account, remove, null);
    }
    
    /// <remarks/>
    public void UpdateAccountDevicesAsync(Account account, bool remove, object userState) {
        if ((this.UpdateAccountDevicesOperationCompleted == null)) {
            this.UpdateAccountDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountDevicesOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountDevices", new object[] {
                    account,
                    remove}, this.UpdateAccountDevicesOperationCompleted, userState);
    }
    
    private void OnUpdateAccountDevicesOperationCompleted(object arg) {
        if ((this.UpdateAccountDevicesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountDevicesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountUsers", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountUsers(Account account, bool remove) {
        this.Invoke("UpdateAccountUsers", new object[] {
                    account,
                    remove});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountUsers(Account account, bool remove, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountUsers", new object[] {
                    account,
                    remove}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountUsers(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountUsersAsync(Account account, bool remove) {
        this.UpdateAccountUsersAsync(account, remove, null);
    }
    
    /// <remarks/>
    public void UpdateAccountUsersAsync(Account account, bool remove, object userState) {
        if ((this.UpdateAccountUsersOperationCompleted == null)) {
            this.UpdateAccountUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountUsersOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountUsers", new object[] {
                    account,
                    remove}, this.UpdateAccountUsersOperationCompleted, userState);
    }
    
    private void OnUpdateAccountUsersOperationCompleted(object arg) {
        if ((this.UpdateAccountUsersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountStatus", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountStatus(Account account) {
        this.Invoke("UpdateAccountStatus", new object[] {
                    account});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountStatus(Account account, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountStatus", new object[] {
                    account}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountStatus(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountStatusAsync(Account account) {
        this.UpdateAccountStatusAsync(account, null);
    }
    
    /// <remarks/>
    public void UpdateAccountStatusAsync(Account account, object userState) {
        if ((this.UpdateAccountStatusOperationCompleted == null)) {
            this.UpdateAccountStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountStatusOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountStatus", new object[] {
                    account}, this.UpdateAccountStatusOperationCompleted, userState);
    }
    
    private void OnUpdateAccountStatusOperationCompleted(object arg) {
        if ((this.UpdateAccountStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountPin", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountPin(Account account) {
        this.Invoke("UpdateAccountPin", new object[] {
                    account});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountPin(Account account, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountPin", new object[] {
                    account}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountPin(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountPinAsync(Account account) {
        this.UpdateAccountPinAsync(account, null);
    }
    
    /// <remarks/>
    public void UpdateAccountPinAsync(Account account, object userState) {
        if ((this.UpdateAccountPinOperationCompleted == null)) {
            this.UpdateAccountPinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountPinOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountPin", new object[] {
                    account}, this.UpdateAccountPinOperationCompleted, userState);
    }
    
    private void OnUpdateAccountPinOperationCompleted(object arg) {
        if ((this.UpdateAccountPinCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountPinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountCreditLimit", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountCreditLimit(Account account) {
        this.Invoke("UpdateAccountCreditLimit", new object[] {
                    account});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountCreditLimit(Account account, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountCreditLimit", new object[] {
                    account}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountCreditLimit(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountCreditLimitAsync(Account account) {
        this.UpdateAccountCreditLimitAsync(account, null);
    }
    
    /// <remarks/>
    public void UpdateAccountCreditLimitAsync(Account account, object userState) {
        if ((this.UpdateAccountCreditLimitOperationCompleted == null)) {
            this.UpdateAccountCreditLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountCreditLimitOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountCreditLimit", new object[] {
                    account}, this.UpdateAccountCreditLimitOperationCompleted, userState);
    }
    
    private void OnUpdateAccountCreditLimitOperationCompleted(object arg) {
        if ((this.UpdateAccountCreditLimitCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountCreditLimitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountTimeZone", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountTimeZone(Account account) {
        this.Invoke("UpdateAccountTimeZone", new object[] {
                    account});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountTimeZone(Account account, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountTimeZone", new object[] {
                    account}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountTimeZone(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountTimeZoneAsync(Account account) {
        this.UpdateAccountTimeZoneAsync(account, null);
    }
    
    /// <remarks/>
    public void UpdateAccountTimeZoneAsync(Account account, object userState) {
        if ((this.UpdateAccountTimeZoneOperationCompleted == null)) {
            this.UpdateAccountTimeZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountTimeZoneOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountTimeZone", new object[] {
                    account}, this.UpdateAccountTimeZoneOperationCompleted, userState);
    }
    
    private void OnUpdateAccountTimeZoneOperationCompleted(object arg) {
        if ((this.UpdateAccountTimeZoneCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountTimeZoneCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountDVRStatus", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountDVRStatus(Account account) {
        this.Invoke("UpdateAccountDVRStatus", new object[] {
                    account});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountDVRStatus(Account account, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountDVRStatus", new object[] {
                    account}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountDVRStatus(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountDVRStatusAsync(Account account) {
        this.UpdateAccountDVRStatusAsync(account, null);
    }
    
    /// <remarks/>
    public void UpdateAccountDVRStatusAsync(Account account, object userState) {
        if ((this.UpdateAccountDVRStatusOperationCompleted == null)) {
            this.UpdateAccountDVRStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountDVRStatusOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountDVRStatus", new object[] {
                    account}, this.UpdateAccountDVRStatusOperationCompleted, userState);
    }
    
    private void OnUpdateAccountDVRStatusOperationCompleted(object arg) {
        if ((this.UpdateAccountDVRStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountDVRStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountRecordingDeviceId", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountRecordingDeviceId(Account account) {
        this.Invoke("UpdateAccountRecordingDeviceId", new object[] {
                    account});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountRecordingDeviceId(Account account, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountRecordingDeviceId", new object[] {
                    account}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountRecordingDeviceId(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountRecordingDeviceIdAsync(Account account) {
        this.UpdateAccountRecordingDeviceIdAsync(account, null);
    }
    
    /// <remarks/>
    public void UpdateAccountRecordingDeviceIdAsync(Account account, object userState) {
        if ((this.UpdateAccountRecordingDeviceIdOperationCompleted == null)) {
            this.UpdateAccountRecordingDeviceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountRecordingDeviceIdOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountRecordingDeviceId", new object[] {
                    account}, this.UpdateAccountRecordingDeviceIdOperationCompleted, userState);
    }
    
    private void OnUpdateAccountRecordingDeviceIdOperationCompleted(object arg) {
        if ((this.UpdateAccountRecordingDeviceIdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountRecordingDeviceIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountHDStreams", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountHDStreams(Account account) {
        this.Invoke("UpdateAccountHDStreams", new object[] {
                    account});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountHDStreams(Account account, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountHDStreams", new object[] {
                    account}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountHDStreams(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountHDStreamsAsync(Account account) {
        this.UpdateAccountHDStreamsAsync(account, null);
    }
    
    /// <remarks/>
    public void UpdateAccountHDStreamsAsync(Account account, object userState) {
        if ((this.UpdateAccountHDStreamsOperationCompleted == null)) {
            this.UpdateAccountHDStreamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountHDStreamsOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountHDStreams", new object[] {
                    account}, this.UpdateAccountHDStreamsOperationCompleted, userState);
    }
    
    private void OnUpdateAccountHDStreamsOperationCompleted(object arg) {
        if ((this.UpdateAccountHDStreamsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountHDStreamsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountSDStreams", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountSDStreams(Account account) {
        this.Invoke("UpdateAccountSDStreams", new object[] {
                    account});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountSDStreams(Account account, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountSDStreams", new object[] {
                    account}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountSDStreams(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountSDStreamsAsync(Account account) {
        this.UpdateAccountSDStreamsAsync(account, null);
    }
    
    /// <remarks/>
    public void UpdateAccountSDStreamsAsync(Account account, object userState) {
        if ((this.UpdateAccountSDStreamsOperationCompleted == null)) {
            this.UpdateAccountSDStreamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountSDStreamsOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountSDStreams", new object[] {
                    account}, this.UpdateAccountSDStreamsOperationCompleted, userState);
    }
    
    private void OnUpdateAccountSDStreamsOperationCompleted(object arg) {
        if ((this.UpdateAccountSDStreamsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountSDStreamsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountExternalId", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountExternalId(string oldAccountExternalId, string newAccountExternalId) {
        this.Invoke("UpdateAccountExternalId", new object[] {
                    oldAccountExternalId,
                    newAccountExternalId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountExternalId(string oldAccountExternalId, string newAccountExternalId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountExternalId", new object[] {
                    oldAccountExternalId,
                    newAccountExternalId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountExternalId(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountExternalIdAsync(string oldAccountExternalId, string newAccountExternalId) {
        this.UpdateAccountExternalIdAsync(oldAccountExternalId, newAccountExternalId, null);
    }
    
    /// <remarks/>
    public void UpdateAccountExternalIdAsync(string oldAccountExternalId, string newAccountExternalId, object userState) {
        if ((this.UpdateAccountExternalIdOperationCompleted == null)) {
            this.UpdateAccountExternalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountExternalIdOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountExternalId", new object[] {
                    oldAccountExternalId,
                    newAccountExternalId}, this.UpdateAccountExternalIdOperationCompleted, userState);
    }
    
    private void OnUpdateAccountExternalIdOperationCompleted(object arg) {
        if ((this.UpdateAccountExternalIdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountExternalIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ProvisionDevice", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void ProvisionDevice(System.Guid deviceId, string deviceName, string accountNativeId) {
        this.Invoke("ProvisionDevice", new object[] {
                    deviceId,
                    deviceName,
                    accountNativeId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginProvisionDevice(System.Guid deviceId, string deviceName, string accountNativeId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ProvisionDevice", new object[] {
                    deviceId,
                    deviceName,
                    accountNativeId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndProvisionDevice(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void ProvisionDeviceAsync(System.Guid deviceId, string deviceName, string accountNativeId) {
        this.ProvisionDeviceAsync(deviceId, deviceName, accountNativeId, null);
    }
    
    /// <remarks/>
    public void ProvisionDeviceAsync(System.Guid deviceId, string deviceName, string accountNativeId, object userState) {
        if ((this.ProvisionDeviceOperationCompleted == null)) {
            this.ProvisionDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProvisionDeviceOperationCompleted);
        }
        this.InvokeAsync("ProvisionDevice", new object[] {
                    deviceId,
                    deviceName,
                    accountNativeId}, this.ProvisionDeviceOperationCompleted, userState);
    }
    
    private void OnProvisionDeviceOperationCompleted(object arg) {
        if ((this.ProvisionDeviceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ProvisionDeviceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/DeleteUser", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteUser(User user) {
        this.Invoke("DeleteUser", new object[] {
                    user});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteUser(User user, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteUser", new object[] {
                    user}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteUser(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteUserAsync(User user) {
        this.DeleteUserAsync(user, null);
    }
    
    /// <remarks/>
    public void DeleteUserAsync(User user, object userState) {
        if ((this.DeleteUserOperationCompleted == null)) {
            this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
        }
        this.InvokeAsync("DeleteUser", new object[] {
                    user}, this.DeleteUserOperationCompleted, userState);
    }
    
    private void OnDeleteUserOperationCompleted(object arg) {
        if ((this.DeleteUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ReadUser", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public User[] ReadUser(User user) {
        object[] results = this.Invoke("ReadUser", new object[] {
                    user});
        return ((User[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadUser(User user, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadUser", new object[] {
                    user}, callback, asyncState);
    }
    
    /// <remarks/>
    public User[] EndReadUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((User[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadUserAsync(User user) {
        this.ReadUserAsync(user, null);
    }
    
    /// <remarks/>
    public void ReadUserAsync(User user, object userState) {
        if ((this.ReadUserOperationCompleted == null)) {
            this.ReadUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadUserOperationCompleted);
        }
        this.InvokeAsync("ReadUser", new object[] {
                    user}, this.ReadUserOperationCompleted, userState);
    }
    
    private void OnReadUserOperationCompleted(object arg) {
        if ((this.ReadUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadUserCompleted(this, new ReadUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateUserPin", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateUserPin(User user) {
        this.Invoke("UpdateUserPin", new object[] {
                    user});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateUserPin(User user, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateUserPin", new object[] {
                    user}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateUserPin(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateUserPinAsync(User user) {
        this.UpdateUserPinAsync(user, null);
    }
    
    /// <remarks/>
    public void UpdateUserPinAsync(User user, object userState) {
        if ((this.UpdateUserPinOperationCompleted == null)) {
            this.UpdateUserPinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserPinOperationCompleted);
        }
        this.InvokeAsync("UpdateUserPin", new object[] {
                    user}, this.UpdateUserPinOperationCompleted, userState);
    }
    
    private void OnUpdateUserPinOperationCompleted(object arg) {
        if ((this.UpdateUserPinCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateUserPinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateUserStatus", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateUserStatus(User user) {
        this.Invoke("UpdateUserStatus", new object[] {
                    user});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateUserStatus(User user, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateUserStatus", new object[] {
                    user}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateUserStatus(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateUserStatusAsync(User user) {
        this.UpdateUserStatusAsync(user, null);
    }
    
    /// <remarks/>
    public void UpdateUserStatusAsync(User user, object userState) {
        if ((this.UpdateUserStatusOperationCompleted == null)) {
            this.UpdateUserStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserStatusOperationCompleted);
        }
        this.InvokeAsync("UpdateUserStatus", new object[] {
                    user}, this.UpdateUserStatusOperationCompleted, userState);
    }
    
    private void OnUpdateUserStatusOperationCompleted(object arg) {
        if ((this.UpdateUserStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateUserStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateDeviceStatus", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateDeviceStatus(Device device) {
        this.Invoke("UpdateDeviceStatus", new object[] {
                    device});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateDeviceStatus(Device device, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateDeviceStatus", new object[] {
                    device}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateDeviceStatus(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateDeviceStatusAsync(Device device) {
        this.UpdateDeviceStatusAsync(device, null);
    }
    
    /// <remarks/>
    public void UpdateDeviceStatusAsync(Device device, object userState) {
        if ((this.UpdateDeviceStatusOperationCompleted == null)) {
            this.UpdateDeviceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDeviceStatusOperationCompleted);
        }
        this.InvokeAsync("UpdateDeviceStatus", new object[] {
                    device}, this.UpdateDeviceStatusOperationCompleted, userState);
    }
    
    private void OnUpdateDeviceStatusOperationCompleted(object arg) {
        if ((this.UpdateDeviceStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateDeviceStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateDeviceExternalId", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateDeviceExternalId(string oldDeviceExternalId, string newDeviceExternalId) {
        this.Invoke("UpdateDeviceExternalId", new object[] {
                    oldDeviceExternalId,
                    newDeviceExternalId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateDeviceExternalId(string oldDeviceExternalId, string newDeviceExternalId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateDeviceExternalId", new object[] {
                    oldDeviceExternalId,
                    newDeviceExternalId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateDeviceExternalId(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateDeviceExternalIdAsync(string oldDeviceExternalId, string newDeviceExternalId) {
        this.UpdateDeviceExternalIdAsync(oldDeviceExternalId, newDeviceExternalId, null);
    }
    
    /// <remarks/>
    public void UpdateDeviceExternalIdAsync(string oldDeviceExternalId, string newDeviceExternalId, object userState) {
        if ((this.UpdateDeviceExternalIdOperationCompleted == null)) {
            this.UpdateDeviceExternalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDeviceExternalIdOperationCompleted);
        }
        this.InvokeAsync("UpdateDeviceExternalId", new object[] {
                    oldDeviceExternalId,
                    newDeviceExternalId}, this.UpdateDeviceExternalIdOperationCompleted, userState);
    }
    
    private void OnUpdateDeviceExternalIdOperationCompleted(object arg) {
        if ((this.UpdateDeviceExternalIdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateDeviceExternalIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateDevicePin", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateDevicePin(Device device) {
        this.Invoke("UpdateDevicePin", new object[] {
                    device});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateDevicePin(Device device, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateDevicePin", new object[] {
                    device}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateDevicePin(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateDevicePinAsync(Device device) {
        this.UpdateDevicePinAsync(device, null);
    }
    
    /// <remarks/>
    public void UpdateDevicePinAsync(Device device, object userState) {
        if ((this.UpdateDevicePinOperationCompleted == null)) {
            this.UpdateDevicePinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDevicePinOperationCompleted);
        }
        this.InvokeAsync("UpdateDevicePin", new object[] {
                    device}, this.UpdateDevicePinOperationCompleted, userState);
    }
    
    private void OnUpdateDevicePinOperationCompleted(object arg) {
        if ((this.UpdateDevicePinCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateDevicePinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateDevicePinByType", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public PinStatus UpdateDevicePinByType(System.Guid deviceId, string oldPin, string newPin, short type) {
        object[] results = this.Invoke("UpdateDevicePinByType", new object[] {
                    deviceId,
                    oldPin,
                    newPin,
                    type});
        return ((PinStatus)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateDevicePinByType(System.Guid deviceId, string oldPin, string newPin, short type, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateDevicePinByType", new object[] {
                    deviceId,
                    oldPin,
                    newPin,
                    type}, callback, asyncState);
    }
    
    /// <remarks/>
    public PinStatus EndUpdateDevicePinByType(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((PinStatus)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateDevicePinByTypeAsync(System.Guid deviceId, string oldPin, string newPin, short type) {
        this.UpdateDevicePinByTypeAsync(deviceId, oldPin, newPin, type, null);
    }
    
    /// <remarks/>
    public void UpdateDevicePinByTypeAsync(System.Guid deviceId, string oldPin, string newPin, short type, object userState) {
        if ((this.UpdateDevicePinByTypeOperationCompleted == null)) {
            this.UpdateDevicePinByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDevicePinByTypeOperationCompleted);
        }
        this.InvokeAsync("UpdateDevicePinByType", new object[] {
                    deviceId,
                    oldPin,
                    newPin,
                    type}, this.UpdateDevicePinByTypeOperationCompleted, userState);
    }
    
    private void OnUpdateDevicePinByTypeOperationCompleted(object arg) {
        if ((this.UpdateDevicePinByTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateDevicePinByTypeCompleted(this, new UpdateDevicePinByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/DeleteDevicePinByType", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteDevicePinByType(System.Guid deviceId, short type) {
        this.Invoke("DeleteDevicePinByType", new object[] {
                    deviceId,
                    type});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteDevicePinByType(System.Guid deviceId, short type, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteDevicePinByType", new object[] {
                    deviceId,
                    type}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteDevicePinByType(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteDevicePinByTypeAsync(System.Guid deviceId, short type) {
        this.DeleteDevicePinByTypeAsync(deviceId, type, null);
    }
    
    /// <remarks/>
    public void DeleteDevicePinByTypeAsync(System.Guid deviceId, short type, object userState) {
        if ((this.DeleteDevicePinByTypeOperationCompleted == null)) {
            this.DeleteDevicePinByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDevicePinByTypeOperationCompleted);
        }
        this.InvokeAsync("DeleteDevicePinByType", new object[] {
                    deviceId,
                    type}, this.DeleteDevicePinByTypeOperationCompleted, userState);
    }
    
    private void OnDeleteDevicePinByTypeOperationCompleted(object arg) {
        if ((this.DeleteDevicePinByTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteDevicePinByTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/DeleteDevicePin", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteDevicePin(System.Guid deviceId) {
        this.Invoke("DeleteDevicePin", new object[] {
                    deviceId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteDevicePin(System.Guid deviceId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteDevicePin", new object[] {
                    deviceId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteDevicePin(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteDevicePinAsync(System.Guid deviceId) {
        this.DeleteDevicePinAsync(deviceId, null);
    }
    
    /// <remarks/>
    public void DeleteDevicePinAsync(System.Guid deviceId, object userState) {
        if ((this.DeleteDevicePinOperationCompleted == null)) {
            this.DeleteDevicePinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDevicePinOperationCompleted);
        }
        this.InvokeAsync("DeleteDevicePin", new object[] {
                    deviceId}, this.DeleteDevicePinOperationCompleted, userState);
    }
    
    private void OnDeleteDevicePinOperationCompleted(object arg) {
        if ((this.DeleteDevicePinCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteDevicePinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateForbiddenPins", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateForbiddenPins(string[] pins) {
        this.Invoke("UpdateForbiddenPins", new object[] {
                    pins});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateForbiddenPins(string[] pins, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateForbiddenPins", new object[] {
                    pins}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateForbiddenPins(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateForbiddenPinsAsync(string[] pins) {
        this.UpdateForbiddenPinsAsync(pins, null);
    }
    
    /// <remarks/>
    public void UpdateForbiddenPinsAsync(string[] pins, object userState) {
        if ((this.UpdateForbiddenPinsOperationCompleted == null)) {
            this.UpdateForbiddenPinsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForbiddenPinsOperationCompleted);
        }
        this.InvokeAsync("UpdateForbiddenPins", new object[] {
                    pins}, this.UpdateForbiddenPinsOperationCompleted, userState);
    }
    
    private void OnUpdateForbiddenPinsOperationCompleted(object arg) {
        if ((this.UpdateForbiddenPinsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateForbiddenPinsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ReadDevicePins", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public PinInfo[] ReadDevicePins(System.Guid deviceId) {
        object[] results = this.Invoke("ReadDevicePins", new object[] {
                    deviceId});
        return ((PinInfo[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadDevicePins(System.Guid deviceId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadDevicePins", new object[] {
                    deviceId}, callback, asyncState);
    }
    
    /// <remarks/>
    public PinInfo[] EndReadDevicePins(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((PinInfo[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadDevicePinsAsync(System.Guid deviceId) {
        this.ReadDevicePinsAsync(deviceId, null);
    }
    
    /// <remarks/>
    public void ReadDevicePinsAsync(System.Guid deviceId, object userState) {
        if ((this.ReadDevicePinsOperationCompleted == null)) {
            this.ReadDevicePinsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadDevicePinsOperationCompleted);
        }
        this.InvokeAsync("ReadDevicePins", new object[] {
                    deviceId}, this.ReadDevicePinsOperationCompleted, userState);
    }
    
    private void OnReadDevicePinsOperationCompleted(object arg) {
        if ((this.ReadDevicePinsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadDevicePinsCompleted(this, new ReadDevicePinsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ReadForbiddenPins", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string[] ReadForbiddenPins() {
        object[] results = this.Invoke("ReadForbiddenPins", new object[0]);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadForbiddenPins(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadForbiddenPins", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndReadForbiddenPins(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadForbiddenPinsAsync() {
        this.ReadForbiddenPinsAsync(null);
    }
    
    /// <remarks/>
    public void ReadForbiddenPinsAsync(object userState) {
        if ((this.ReadForbiddenPinsOperationCompleted == null)) {
            this.ReadForbiddenPinsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadForbiddenPinsOperationCompleted);
        }
        this.InvokeAsync("ReadForbiddenPins", new object[0], this.ReadForbiddenPinsOperationCompleted, userState);
    }
    
    private void OnReadForbiddenPinsOperationCompleted(object arg) {
        if ((this.ReadForbiddenPinsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadForbiddenPinsCompleted(this, new ReadForbiddenPinsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ResetDevicePinByType", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public PinStatus ResetDevicePinByType(System.Guid deviceId, string pin, short type) {
        object[] results = this.Invoke("ResetDevicePinByType", new object[] {
                    deviceId,
                    pin,
                    type});
        return ((PinStatus)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginResetDevicePinByType(System.Guid deviceId, string pin, short type, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ResetDevicePinByType", new object[] {
                    deviceId,
                    pin,
                    type}, callback, asyncState);
    }
    
    /// <remarks/>
    public PinStatus EndResetDevicePinByType(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((PinStatus)(results[0]));
    }
    
    /// <remarks/>
    public void ResetDevicePinByTypeAsync(System.Guid deviceId, string pin, short type) {
        this.ResetDevicePinByTypeAsync(deviceId, pin, type, null);
    }
    
    /// <remarks/>
    public void ResetDevicePinByTypeAsync(System.Guid deviceId, string pin, short type, object userState) {
        if ((this.ResetDevicePinByTypeOperationCompleted == null)) {
            this.ResetDevicePinByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetDevicePinByTypeOperationCompleted);
        }
        this.InvokeAsync("ResetDevicePinByType", new object[] {
                    deviceId,
                    pin,
                    type}, this.ResetDevicePinByTypeOperationCompleted, userState);
    }
    
    private void OnResetDevicePinByTypeOperationCompleted(object arg) {
        if ((this.ResetDevicePinByTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ResetDevicePinByTypeCompleted(this, new ResetDevicePinByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateDeviceVersion", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateDeviceVersion(Device device) {
        this.Invoke("UpdateDeviceVersion", new object[] {
                    device});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateDeviceVersion(Device device, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateDeviceVersion", new object[] {
                    device}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateDeviceVersion(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateDeviceVersionAsync(Device device) {
        this.UpdateDeviceVersionAsync(device, null);
    }
    
    /// <remarks/>
    public void UpdateDeviceVersionAsync(Device device, object userState) {
        if ((this.UpdateDeviceVersionOperationCompleted == null)) {
            this.UpdateDeviceVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDeviceVersionOperationCompleted);
        }
        this.InvokeAsync("UpdateDeviceVersion", new object[] {
                    device}, this.UpdateDeviceVersionOperationCompleted, userState);
    }
    
    private void OnUpdateDeviceVersionOperationCompleted(object arg) {
        if ((this.UpdateDeviceVersionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateDeviceVersionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ReadAllDeviceValues", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public DeviceValue[] ReadAllDeviceValues(string deviceExternalID) {
        object[] results = this.Invoke("ReadAllDeviceValues", new object[] {
                    deviceExternalID});
        return ((DeviceValue[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadAllDeviceValues(string deviceExternalID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadAllDeviceValues", new object[] {
                    deviceExternalID}, callback, asyncState);
    }
    
    /// <remarks/>
    public DeviceValue[] EndReadAllDeviceValues(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((DeviceValue[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadAllDeviceValuesAsync(string deviceExternalID) {
        this.ReadAllDeviceValuesAsync(deviceExternalID, null);
    }
    
    /// <remarks/>
    public void ReadAllDeviceValuesAsync(string deviceExternalID, object userState) {
        if ((this.ReadAllDeviceValuesOperationCompleted == null)) {
            this.ReadAllDeviceValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAllDeviceValuesOperationCompleted);
        }
        this.InvokeAsync("ReadAllDeviceValues", new object[] {
                    deviceExternalID}, this.ReadAllDeviceValuesOperationCompleted, userState);
    }
    
    private void OnReadAllDeviceValuesOperationCompleted(object arg) {
        if ((this.ReadAllDeviceValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadAllDeviceValuesCompleted(this, new ReadAllDeviceValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/DeleteAllDeviceValues", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteAllDeviceValues(string deviceExternalID) {
        this.Invoke("DeleteAllDeviceValues", new object[] {
                    deviceExternalID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteAllDeviceValues(string deviceExternalID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteAllDeviceValues", new object[] {
                    deviceExternalID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteAllDeviceValues(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteAllDeviceValuesAsync(string deviceExternalID) {
        this.DeleteAllDeviceValuesAsync(deviceExternalID, null);
    }
    
    /// <remarks/>
    public void DeleteAllDeviceValuesAsync(string deviceExternalID, object userState) {
        if ((this.DeleteAllDeviceValuesOperationCompleted == null)) {
            this.DeleteAllDeviceValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllDeviceValuesOperationCompleted);
        }
        this.InvokeAsync("DeleteAllDeviceValues", new object[] {
                    deviceExternalID}, this.DeleteAllDeviceValuesOperationCompleted, userState);
    }
    
    private void OnDeleteAllDeviceValuesOperationCompleted(object arg) {
        if ((this.DeleteAllDeviceValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteAllDeviceValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateDeviceValues", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateDeviceValues(string deviceExternalID, DeviceValue[] deviceValues) {
        this.Invoke("UpdateDeviceValues", new object[] {
                    deviceExternalID,
                    deviceValues});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateDeviceValues(string deviceExternalID, DeviceValue[] deviceValues, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateDeviceValues", new object[] {
                    deviceExternalID,
                    deviceValues}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateDeviceValues(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateDeviceValuesAsync(string deviceExternalID, DeviceValue[] deviceValues) {
        this.UpdateDeviceValuesAsync(deviceExternalID, deviceValues, null);
    }
    
    /// <remarks/>
    public void UpdateDeviceValuesAsync(string deviceExternalID, DeviceValue[] deviceValues, object userState) {
        if ((this.UpdateDeviceValuesOperationCompleted == null)) {
            this.UpdateDeviceValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDeviceValuesOperationCompleted);
        }
        this.InvokeAsync("UpdateDeviceValues", new object[] {
                    deviceExternalID,
                    deviceValues}, this.UpdateDeviceValuesOperationCompleted, userState);
    }
    
    private void OnUpdateDeviceValuesOperationCompleted(object arg) {
        if ((this.UpdateDeviceValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateDeviceValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateDeviceValuesAndNotify", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateDeviceValuesAndNotify(string deviceExternalID, DeviceValue[] deviceValues) {
        this.Invoke("UpdateDeviceValuesAndNotify", new object[] {
                    deviceExternalID,
                    deviceValues});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateDeviceValuesAndNotify(string deviceExternalID, DeviceValue[] deviceValues, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateDeviceValuesAndNotify", new object[] {
                    deviceExternalID,
                    deviceValues}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateDeviceValuesAndNotify(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateDeviceValuesAndNotifyAsync(string deviceExternalID, DeviceValue[] deviceValues) {
        this.UpdateDeviceValuesAndNotifyAsync(deviceExternalID, deviceValues, null);
    }
    
    /// <remarks/>
    public void UpdateDeviceValuesAndNotifyAsync(string deviceExternalID, DeviceValue[] deviceValues, object userState) {
        if ((this.UpdateDeviceValuesAndNotifyOperationCompleted == null)) {
            this.UpdateDeviceValuesAndNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDeviceValuesAndNotifyOperationCompleted);
        }
        this.InvokeAsync("UpdateDeviceValuesAndNotify", new object[] {
                    deviceExternalID,
                    deviceValues}, this.UpdateDeviceValuesAndNotifyOperationCompleted, userState);
    }
    
    private void OnUpdateDeviceValuesAndNotifyOperationCompleted(object arg) {
        if ((this.UpdateDeviceValuesAndNotifyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateDeviceValuesAndNotifyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ReadDevice", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Device[] ReadDevice(string deviceExternalID) {
        object[] results = this.Invoke("ReadDevice", new object[] {
                    deviceExternalID});
        return ((Device[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadDevice(string deviceExternalID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadDevice", new object[] {
                    deviceExternalID}, callback, asyncState);
    }
    
    /// <remarks/>
    public Device[] EndReadDevice(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Device[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadDeviceAsync(string deviceExternalID) {
        this.ReadDeviceAsync(deviceExternalID, null);
    }
    
    /// <remarks/>
    public void ReadDeviceAsync(string deviceExternalID, object userState) {
        if ((this.ReadDeviceOperationCompleted == null)) {
            this.ReadDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadDeviceOperationCompleted);
        }
        this.InvokeAsync("ReadDevice", new object[] {
                    deviceExternalID}, this.ReadDeviceOperationCompleted, userState);
    }
    
    private void OnReadDeviceOperationCompleted(object arg) {
        if ((this.ReadDeviceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadDeviceCompleted(this, new ReadDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ReadDeviceByGuid", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Device ReadDeviceByGuid(System.Guid deviceID) {
        object[] results = this.Invoke("ReadDeviceByGuid", new object[] {
                    deviceID});
        return ((Device)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadDeviceByGuid(System.Guid deviceID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadDeviceByGuid", new object[] {
                    deviceID}, callback, asyncState);
    }
    
    /// <remarks/>
    public Device EndReadDeviceByGuid(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Device)(results[0]));
    }
    
    /// <remarks/>
    public void ReadDeviceByGuidAsync(System.Guid deviceID) {
        this.ReadDeviceByGuidAsync(deviceID, null);
    }
    
    /// <remarks/>
    public void ReadDeviceByGuidAsync(System.Guid deviceID, object userState) {
        if ((this.ReadDeviceByGuidOperationCompleted == null)) {
            this.ReadDeviceByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadDeviceByGuidOperationCompleted);
        }
        this.InvokeAsync("ReadDeviceByGuid", new object[] {
                    deviceID}, this.ReadDeviceByGuidOperationCompleted, userState);
    }
    
    private void OnReadDeviceByGuidOperationCompleted(object arg) {
        if ((this.ReadDeviceByGuidCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadDeviceByGuidCompleted(this, new ReadDeviceByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateEnableDateForAllPins", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateEnableDateForAllPins(string deviceExternalId, System.DateTime enableDate) {
        this.Invoke("UpdateEnableDateForAllPins", new object[] {
                    deviceExternalId,
                    enableDate});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateEnableDateForAllPins(string deviceExternalId, System.DateTime enableDate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateEnableDateForAllPins", new object[] {
                    deviceExternalId,
                    enableDate}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateEnableDateForAllPins(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateEnableDateForAllPinsAsync(string deviceExternalId, System.DateTime enableDate) {
        this.UpdateEnableDateForAllPinsAsync(deviceExternalId, enableDate, null);
    }
    
    /// <remarks/>
    public void UpdateEnableDateForAllPinsAsync(string deviceExternalId, System.DateTime enableDate, object userState) {
        if ((this.UpdateEnableDateForAllPinsOperationCompleted == null)) {
            this.UpdateEnableDateForAllPinsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEnableDateForAllPinsOperationCompleted);
        }
        this.InvokeAsync("UpdateEnableDateForAllPins", new object[] {
                    deviceExternalId,
                    enableDate}, this.UpdateEnableDateForAllPinsOperationCompleted, userState);
    }
    
    private void OnUpdateEnableDateForAllPinsOperationCompleted(object arg) {
        if ((this.UpdateEnableDateForAllPinsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateEnableDateForAllPinsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateEnableDateForPinByType", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateEnableDateForPinByType(string deviceExternalId, short type, System.DateTime enableDate) {
        this.Invoke("UpdateEnableDateForPinByType", new object[] {
                    deviceExternalId,
                    type,
                    enableDate});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateEnableDateForPinByType(string deviceExternalId, short type, System.DateTime enableDate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateEnableDateForPinByType", new object[] {
                    deviceExternalId,
                    type,
                    enableDate}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateEnableDateForPinByType(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateEnableDateForPinByTypeAsync(string deviceExternalId, short type, System.DateTime enableDate) {
        this.UpdateEnableDateForPinByTypeAsync(deviceExternalId, type, enableDate, null);
    }
    
    /// <remarks/>
    public void UpdateEnableDateForPinByTypeAsync(string deviceExternalId, short type, System.DateTime enableDate, object userState) {
        if ((this.UpdateEnableDateForPinByTypeOperationCompleted == null)) {
            this.UpdateEnableDateForPinByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEnableDateForPinByTypeOperationCompleted);
        }
        this.InvokeAsync("UpdateEnableDateForPinByType", new object[] {
                    deviceExternalId,
                    type,
                    enableDate}, this.UpdateEnableDateForPinByTypeOperationCompleted, userState);
    }
    
    private void OnUpdateEnableDateForPinByTypeOperationCompleted(object arg) {
        if ((this.UpdateEnableDateForPinByTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateEnableDateForPinByTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ReadDeviceGroups", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public SubscriberGroup[] ReadDeviceGroups(Device account) {
        object[] results = this.Invoke("ReadDeviceGroups", new object[] {
                    account});
        return ((SubscriberGroup[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadDeviceGroups(Device account, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadDeviceGroups", new object[] {
                    account}, callback, asyncState);
    }
    
    /// <remarks/>
    public SubscriberGroup[] EndReadDeviceGroups(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SubscriberGroup[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadDeviceGroupsAsync(Device account) {
        this.ReadDeviceGroupsAsync(account, null);
    }
    
    /// <remarks/>
    public void ReadDeviceGroupsAsync(Device account, object userState) {
        if ((this.ReadDeviceGroupsOperationCompleted == null)) {
            this.ReadDeviceGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadDeviceGroupsOperationCompleted);
        }
        this.InvokeAsync("ReadDeviceGroups", new object[] {
                    account}, this.ReadDeviceGroupsOperationCompleted, userState);
    }
    
    private void OnReadDeviceGroupsOperationCompleted(object arg) {
        if ((this.ReadDeviceGroupsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadDeviceGroupsCompleted(this, new ReadDeviceGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ReadAccountGroups", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public SubscriberGroup[] ReadAccountGroups(Account account) {
        object[] results = this.Invoke("ReadAccountGroups", new object[] {
                    account});
        return ((SubscriberGroup[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadAccountGroups(Account account, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadAccountGroups", new object[] {
                    account}, callback, asyncState);
    }
    
    /// <remarks/>
    public SubscriberGroup[] EndReadAccountGroups(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SubscriberGroup[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadAccountGroupsAsync(Account account) {
        this.ReadAccountGroupsAsync(account, null);
    }
    
    /// <remarks/>
    public void ReadAccountGroupsAsync(Account account, object userState) {
        if ((this.ReadAccountGroupsOperationCompleted == null)) {
            this.ReadAccountGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAccountGroupsOperationCompleted);
        }
        this.InvokeAsync("ReadAccountGroups", new object[] {
                    account}, this.ReadAccountGroupsOperationCompleted, userState);
    }
    
    private void OnReadAccountGroupsOperationCompleted(object arg) {
        if ((this.ReadAccountGroupsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadAccountGroupsCompleted(this, new ReadAccountGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/ReadAllAccountValues", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public AccountValue[] ReadAllAccountValues(string accountExternalID) {
        object[] results = this.Invoke("ReadAllAccountValues", new object[] {
                    accountExternalID});
        return ((AccountValue[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadAllAccountValues(string accountExternalID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadAllAccountValues", new object[] {
                    accountExternalID}, callback, asyncState);
    }
    
    /// <remarks/>
    public AccountValue[] EndReadAllAccountValues(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((AccountValue[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadAllAccountValuesAsync(string accountExternalID) {
        this.ReadAllAccountValuesAsync(accountExternalID, null);
    }
    
    /// <remarks/>
    public void ReadAllAccountValuesAsync(string accountExternalID, object userState) {
        if ((this.ReadAllAccountValuesOperationCompleted == null)) {
            this.ReadAllAccountValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAllAccountValuesOperationCompleted);
        }
        this.InvokeAsync("ReadAllAccountValues", new object[] {
                    accountExternalID}, this.ReadAllAccountValuesOperationCompleted, userState);
    }
    
    private void OnReadAllAccountValuesOperationCompleted(object arg) {
        if ((this.ReadAllAccountValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadAllAccountValuesCompleted(this, new ReadAllAccountValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountValues", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountValues(string accountExternalID, AccountValue[] accountValues) {
        this.Invoke("UpdateAccountValues", new object[] {
                    accountExternalID,
                    accountValues});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountValues(string accountExternalID, AccountValue[] accountValues, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountValues", new object[] {
                    accountExternalID,
                    accountValues}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountValues(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountValuesAsync(string accountExternalID, AccountValue[] accountValues) {
        this.UpdateAccountValuesAsync(accountExternalID, accountValues, null);
    }
    
    /// <remarks/>
    public void UpdateAccountValuesAsync(string accountExternalID, AccountValue[] accountValues, object userState) {
        if ((this.UpdateAccountValuesOperationCompleted == null)) {
            this.UpdateAccountValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountValuesOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountValues", new object[] {
                    accountExternalID,
                    accountValues}, this.UpdateAccountValuesOperationCompleted, userState);
    }
    
    private void OnUpdateAccountValuesOperationCompleted(object arg) {
        if ((this.UpdateAccountValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/DeleteAccountValues", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteAccountValues(string accountExternalID, AccountValue[] accountValues) {
        this.Invoke("DeleteAccountValues", new object[] {
                    accountExternalID,
                    accountValues});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteAccountValues(string accountExternalID, AccountValue[] accountValues, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteAccountValues", new object[] {
                    accountExternalID,
                    accountValues}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteAccountValues(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteAccountValuesAsync(string accountExternalID, AccountValue[] accountValues) {
        this.DeleteAccountValuesAsync(accountExternalID, accountValues, null);
    }
    
    /// <remarks/>
    public void DeleteAccountValuesAsync(string accountExternalID, AccountValue[] accountValues, object userState) {
        if ((this.DeleteAccountValuesOperationCompleted == null)) {
            this.DeleteAccountValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountValuesOperationCompleted);
        }
        this.InvokeAsync("DeleteAccountValues", new object[] {
                    accountExternalID,
                    accountValues}, this.DeleteAccountValuesOperationCompleted, userState);
    }
    
    private void OnDeleteAccountValuesOperationCompleted(object arg) {
        if ((this.DeleteAccountValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteAccountValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountValuesAndNotify", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountValuesAndNotify(string accountExternalID, AccountValue[] accountValues) {
        this.Invoke("UpdateAccountValuesAndNotify", new object[] {
                    accountExternalID,
                    accountValues});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountValuesAndNotify(string accountExternalID, AccountValue[] accountValues, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountValuesAndNotify", new object[] {
                    accountExternalID,
                    accountValues}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountValuesAndNotify(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountValuesAndNotifyAsync(string accountExternalID, AccountValue[] accountValues) {
        this.UpdateAccountValuesAndNotifyAsync(accountExternalID, accountValues, null);
    }
    
    /// <remarks/>
    public void UpdateAccountValuesAndNotifyAsync(string accountExternalID, AccountValue[] accountValues, object userState) {
        if ((this.UpdateAccountValuesAndNotifyOperationCompleted == null)) {
            this.UpdateAccountValuesAndNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountValuesAndNotifyOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountValuesAndNotify", new object[] {
                    accountExternalID,
                    accountValues}, this.UpdateAccountValuesAndNotifyOperationCompleted, userState);
    }
    
    private void OnUpdateAccountValuesAndNotifyOperationCompleted(object arg) {
        if ((this.UpdateAccountValuesAndNotifyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountValuesAndNotifyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/DeleteAllAccountValues", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteAllAccountValues(string accountExternalID) {
        this.Invoke("DeleteAllAccountValues", new object[] {
                    accountExternalID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteAllAccountValues(string accountExternalID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteAllAccountValues", new object[] {
                    accountExternalID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteAllAccountValues(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteAllAccountValuesAsync(string accountExternalID) {
        this.DeleteAllAccountValuesAsync(accountExternalID, null);
    }
    
    /// <remarks/>
    public void DeleteAllAccountValuesAsync(string accountExternalID, object userState) {
        if ((this.DeleteAllAccountValuesOperationCompleted == null)) {
            this.DeleteAllAccountValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllAccountValuesOperationCompleted);
        }
        this.InvokeAsync("DeleteAllAccountValues", new object[] {
                    accountExternalID}, this.DeleteAllAccountValuesOperationCompleted, userState);
    }
    
    private void OnDeleteAllAccountValuesOperationCompleted(object arg) {
        if ((this.DeleteAllAccountValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteAllAccountValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/DeleteAccountValue", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteAccountValue(string accountExternalID, string key) {
        this.Invoke("DeleteAccountValue", new object[] {
                    accountExternalID,
                    key});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteAccountValue(string accountExternalID, string key, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteAccountValue", new object[] {
                    accountExternalID,
                    key}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteAccountValue(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteAccountValueAsync(string accountExternalID, string key) {
        this.DeleteAccountValueAsync(accountExternalID, key, null);
    }
    
    /// <remarks/>
    public void DeleteAccountValueAsync(string accountExternalID, string key, object userState) {
        if ((this.DeleteAccountValueOperationCompleted == null)) {
            this.DeleteAccountValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountValueOperationCompleted);
        }
        this.InvokeAsync("DeleteAccountValue", new object[] {
                    accountExternalID,
                    key}, this.DeleteAccountValueOperationCompleted, userState);
    }
    
    private void OnDeleteAccountValueOperationCompleted(object arg) {
        if ((this.DeleteAccountValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteAccountValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/UpdateAccountStreamAllocations", RequestNamespace="http://www.microsoft.com/iptv/bss", ResponseNamespace="http://www.microsoft.com/iptv/bss", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateAccountStreamAllocations(string[] accountExternalIds, StreamAllocation streamAllocation) {
        this.Invoke("UpdateAccountStreamAllocations", new object[] {
                    accountExternalIds,
                    streamAllocation});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateAccountStreamAllocations(string[] accountExternalIds, StreamAllocation streamAllocation, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateAccountStreamAllocations", new object[] {
                    accountExternalIds,
                    streamAllocation}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateAccountStreamAllocations(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateAccountStreamAllocationsAsync(string[] accountExternalIds, StreamAllocation streamAllocation) {
        this.UpdateAccountStreamAllocationsAsync(accountExternalIds, streamAllocation, null);
    }
    
    /// <remarks/>
    public void UpdateAccountStreamAllocationsAsync(string[] accountExternalIds, StreamAllocation streamAllocation, object userState) {
        if ((this.UpdateAccountStreamAllocationsOperationCompleted == null)) {
            this.UpdateAccountStreamAllocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountStreamAllocationsOperationCompleted);
        }
        this.InvokeAsync("UpdateAccountStreamAllocations", new object[] {
                    accountExternalIds,
                    streamAllocation}, this.UpdateAccountStreamAllocationsOperationCompleted, userState);
    }
    
    private void OnUpdateAccountStreamAllocationsOperationCompleted(object arg) {
        if ((this.UpdateAccountStreamAllocationsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateAccountStreamAllocationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="PrincipalManagementInterfaceSoap", Namespace="http://www.microsoft.com/iptv/bss2")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Principal1))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Principal))]
public partial class PrincipalManagementInterfaceSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback RemoveDeviceValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetGlobalValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveGlobalValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetGlobalValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateGRCMembershipOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetGRCMembershipOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveGRCMembershipOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetGRCMembershipOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetStreamManagementProfileOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveStreamManagementProfileOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetStreamManagementProfileOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetGroupMembershipsOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveGroupMembershipsOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetGroupMembershipsOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddGroupMembershipsOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadAllGroupsOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReadGroupsOperationCompleted;
    
    private System.Threading.SendOrPostCallback NewUpgradeGroupOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetUpgradeGroupVersionOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetUpgradeGroupsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetUpgradeGroupOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetDeviceVersionStackOperationCompleted;
    
    /// <remarks/>
    public PrincipalManagementInterfaceSoap() {
        this.Url = "http://78.107.199.132/bss/PrincipalManagement.asmx";
    }
    
    /// <remarks/>
    public event RemoveDeviceValuesCompletedEventHandler RemoveDeviceValuesCompleted;
    
    /// <remarks/>
    public event SetGlobalValueCompletedEventHandler SetGlobalValueCompleted;
    
    /// <remarks/>
    public event RemoveGlobalValueCompletedEventHandler RemoveGlobalValueCompleted;
    
    /// <remarks/>
    public event GetGlobalValueCompletedEventHandler GetGlobalValueCompleted;
    
    /// <remarks/>
    public event UpdateGRCMembershipCompletedEventHandler UpdateGRCMembershipCompleted;
    
    /// <remarks/>
    public event SetGRCMembershipCompletedEventHandler SetGRCMembershipCompleted;
    
    /// <remarks/>
    public event RemoveGRCMembershipCompletedEventHandler RemoveGRCMembershipCompleted;
    
    /// <remarks/>
    public event GetGRCMembershipCompletedEventHandler GetGRCMembershipCompleted;
    
    /// <remarks/>
    public event GetStreamManagementProfileCompletedEventHandler GetStreamManagementProfileCompleted;
    
    /// <remarks/>
    public event RemoveStreamManagementProfileCompletedEventHandler RemoveStreamManagementProfileCompleted;
    
    /// <remarks/>
    public event SetStreamManagementProfileCompletedEventHandler SetStreamManagementProfileCompleted;
    
    /// <remarks/>
    public event GetGroupMembershipsCompletedEventHandler GetGroupMembershipsCompleted;
    
    /// <remarks/>
    public event RemoveGroupMembershipsCompletedEventHandler RemoveGroupMembershipsCompleted;
    
    /// <remarks/>
    public event SetGroupMembershipsCompletedEventHandler SetGroupMembershipsCompleted;
    
    /// <remarks/>
    public event AddGroupMembershipsCompletedEventHandler AddGroupMembershipsCompleted;
    
    /// <remarks/>
    public event ReadAllGroupsCompletedEventHandler ReadAllGroupsCompleted;
    
    /// <remarks/>
    public event ReadGroupsCompletedEventHandler ReadGroupsCompleted;
    
    /// <remarks/>
    public event NewUpgradeGroupCompletedEventHandler NewUpgradeGroupCompleted;
    
    /// <remarks/>
    public event SetUpgradeGroupVersionCompletedEventHandler SetUpgradeGroupVersionCompleted;
    
    /// <remarks/>
    public event GetUpgradeGroupsCompletedEventHandler GetUpgradeGroupsCompleted;
    
    /// <remarks/>
    public event GetUpgradeGroupCompletedEventHandler GetUpgradeGroupCompleted;
    
    /// <remarks/>
    public event GetDeviceVersionStackCompletedEventHandler GetDeviceVersionStackCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/RemoveDeviceValues", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveDeviceValues(DevicePrincipalExternalId deviceExternalId, [System.Xml.Serialization.XmlElementAttribute("keyName")] string[] keyName) {
        this.Invoke("RemoveDeviceValues", new object[] {
                    deviceExternalId,
                    keyName});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveDeviceValues(DevicePrincipalExternalId deviceExternalId, string[] keyName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveDeviceValues", new object[] {
                    deviceExternalId,
                    keyName}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveDeviceValues(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveDeviceValuesAsync(DevicePrincipalExternalId deviceExternalId, string[] keyName) {
        this.RemoveDeviceValuesAsync(deviceExternalId, keyName, null);
    }
    
    /// <remarks/>
    public void RemoveDeviceValuesAsync(DevicePrincipalExternalId deviceExternalId, string[] keyName, object userState) {
        if ((this.RemoveDeviceValuesOperationCompleted == null)) {
            this.RemoveDeviceValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDeviceValuesOperationCompleted);
        }
        this.InvokeAsync("RemoveDeviceValues", new object[] {
                    deviceExternalId,
                    keyName}, this.RemoveDeviceValuesOperationCompleted, userState);
    }
    
    private void OnRemoveDeviceValuesOperationCompleted(object arg) {
        if ((this.RemoveDeviceValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveDeviceValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/SetGlobalValue", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void SetGlobalValue(string key, string val) {
        this.Invoke("SetGlobalValue", new object[] {
                    key,
                    val});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetGlobalValue(string key, string val, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetGlobalValue", new object[] {
                    key,
                    val}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetGlobalValue(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetGlobalValueAsync(string key, string val) {
        this.SetGlobalValueAsync(key, val, null);
    }
    
    /// <remarks/>
    public void SetGlobalValueAsync(string key, string val, object userState) {
        if ((this.SetGlobalValueOperationCompleted == null)) {
            this.SetGlobalValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGlobalValueOperationCompleted);
        }
        this.InvokeAsync("SetGlobalValue", new object[] {
                    key,
                    val}, this.SetGlobalValueOperationCompleted, userState);
    }
    
    private void OnSetGlobalValueOperationCompleted(object arg) {
        if ((this.SetGlobalValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetGlobalValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/RemoveGlobalValue", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveGlobalValue(string key) {
        this.Invoke("RemoveGlobalValue", new object[] {
                    key});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveGlobalValue(string key, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveGlobalValue", new object[] {
                    key}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveGlobalValue(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveGlobalValueAsync(string key) {
        this.RemoveGlobalValueAsync(key, null);
    }
    
    /// <remarks/>
    public void RemoveGlobalValueAsync(string key, object userState) {
        if ((this.RemoveGlobalValueOperationCompleted == null)) {
            this.RemoveGlobalValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGlobalValueOperationCompleted);
        }
        this.InvokeAsync("RemoveGlobalValue", new object[] {
                    key}, this.RemoveGlobalValueOperationCompleted, userState);
    }
    
    private void OnRemoveGlobalValueOperationCompleted(object arg) {
        if ((this.RemoveGlobalValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveGlobalValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss/GetGlobalValue", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("GetGlobalValueResponse")]
    public UserstoreNameValue[] GetGlobalValue(string key) {
        object[] results = this.Invoke("GetGlobalValue", new object[] {
                    key});
        return ((UserstoreNameValue[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetGlobalValue(string key, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetGlobalValue", new object[] {
                    key}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserstoreNameValue[] EndGetGlobalValue(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserstoreNameValue[])(results[0]));
    }
    
    /// <remarks/>
    public void GetGlobalValueAsync(string key) {
        this.GetGlobalValueAsync(key, null);
    }
    
    /// <remarks/>
    public void GetGlobalValueAsync(string key, object userState) {
        if ((this.GetGlobalValueOperationCompleted == null)) {
            this.GetGlobalValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalValueOperationCompleted);
        }
        this.InvokeAsync("GetGlobalValue", new object[] {
                    key}, this.GetGlobalValueOperationCompleted, userState);
    }
    
    private void OnGetGlobalValueOperationCompleted(object arg) {
        if ((this.GetGlobalValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetGlobalValueCompleted(this, new GetGlobalValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/UpdateGRCMembership", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void UpdateGRCMembership(string serviceGroupName, [System.Xml.Serialization.XmlElementAttribute("principalGRCMembership")] PrincipalGRCMembership[] principalGRCMembership) {
        this.Invoke("UpdateGRCMembership", new object[] {
                    serviceGroupName,
                    principalGRCMembership});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateGRCMembership(string serviceGroupName, PrincipalGRCMembership[] principalGRCMembership, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateGRCMembership", new object[] {
                    serviceGroupName,
                    principalGRCMembership}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUpdateGRCMembership(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void UpdateGRCMembershipAsync(string serviceGroupName, PrincipalGRCMembership[] principalGRCMembership) {
        this.UpdateGRCMembershipAsync(serviceGroupName, principalGRCMembership, null);
    }
    
    /// <remarks/>
    public void UpdateGRCMembershipAsync(string serviceGroupName, PrincipalGRCMembership[] principalGRCMembership, object userState) {
        if ((this.UpdateGRCMembershipOperationCompleted == null)) {
            this.UpdateGRCMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGRCMembershipOperationCompleted);
        }
        this.InvokeAsync("UpdateGRCMembership", new object[] {
                    serviceGroupName,
                    principalGRCMembership}, this.UpdateGRCMembershipOperationCompleted, userState);
    }
    
    private void OnUpdateGRCMembershipOperationCompleted(object arg) {
        if ((this.UpdateGRCMembershipCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateGRCMembershipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/SetGRCMembership", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void SetGRCMembership(PrincipalGRCMembership principalGRCMembership) {
        this.Invoke("SetGRCMembership", new object[] {
                    principalGRCMembership});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetGRCMembership(PrincipalGRCMembership principalGRCMembership, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetGRCMembership", new object[] {
                    principalGRCMembership}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetGRCMembership(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetGRCMembershipAsync(PrincipalGRCMembership principalGRCMembership) {
        this.SetGRCMembershipAsync(principalGRCMembership, null);
    }
    
    /// <remarks/>
    public void SetGRCMembershipAsync(PrincipalGRCMembership principalGRCMembership, object userState) {
        if ((this.SetGRCMembershipOperationCompleted == null)) {
            this.SetGRCMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGRCMembershipOperationCompleted);
        }
        this.InvokeAsync("SetGRCMembership", new object[] {
                    principalGRCMembership}, this.SetGRCMembershipOperationCompleted, userState);
    }
    
    private void OnSetGRCMembershipOperationCompleted(object arg) {
        if ((this.SetGRCMembershipCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetGRCMembershipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/RemoveGRCMembership", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveGRCMembership(AccountPrincipalExternalId accountExternalID) {
        this.Invoke("RemoveGRCMembership", new object[] {
                    accountExternalID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveGRCMembership(AccountPrincipalExternalId accountExternalID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveGRCMembership", new object[] {
                    accountExternalID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveGRCMembership(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveGRCMembershipAsync(AccountPrincipalExternalId accountExternalID) {
        this.RemoveGRCMembershipAsync(accountExternalID, null);
    }
    
    /// <remarks/>
    public void RemoveGRCMembershipAsync(AccountPrincipalExternalId accountExternalID, object userState) {
        if ((this.RemoveGRCMembershipOperationCompleted == null)) {
            this.RemoveGRCMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGRCMembershipOperationCompleted);
        }
        this.InvokeAsync("RemoveGRCMembership", new object[] {
                    accountExternalID}, this.RemoveGRCMembershipOperationCompleted, userState);
    }
    
    private void OnRemoveGRCMembershipOperationCompleted(object arg) {
        if ((this.RemoveGRCMembershipCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveGRCMembershipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/GetGRCMembership", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("GetGRCMembershipResult")]
    public GRCMembership[] GetGRCMembership(AccountPrincipalExternalId accountExternalID) {
        object[] results = this.Invoke("GetGRCMembership", new object[] {
                    accountExternalID});
        return ((GRCMembership[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetGRCMembership(AccountPrincipalExternalId accountExternalID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetGRCMembership", new object[] {
                    accountExternalID}, callback, asyncState);
    }
    
    /// <remarks/>
    public GRCMembership[] EndGetGRCMembership(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((GRCMembership[])(results[0]));
    }
    
    /// <remarks/>
    public void GetGRCMembershipAsync(AccountPrincipalExternalId accountExternalID) {
        this.GetGRCMembershipAsync(accountExternalID, null);
    }
    
    /// <remarks/>
    public void GetGRCMembershipAsync(AccountPrincipalExternalId accountExternalID, object userState) {
        if ((this.GetGRCMembershipOperationCompleted == null)) {
            this.GetGRCMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGRCMembershipOperationCompleted);
        }
        this.InvokeAsync("GetGRCMembership", new object[] {
                    accountExternalID}, this.GetGRCMembershipOperationCompleted, userState);
    }
    
    private void OnGetGRCMembershipOperationCompleted(object arg) {
        if ((this.GetGRCMembershipCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetGRCMembershipCompleted(this, new GetGRCMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/GetStreamManagementProfile", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public StreamManagementProfile GetStreamManagementProfile(PrincipalIdentifier principalId, StreamManagementProfileType profileType) {
        object[] results = this.Invoke("GetStreamManagementProfile", new object[] {
                    principalId,
                    profileType});
        return ((StreamManagementProfile)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetStreamManagementProfile(PrincipalIdentifier principalId, StreamManagementProfileType profileType, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetStreamManagementProfile", new object[] {
                    principalId,
                    profileType}, callback, asyncState);
    }
    
    /// <remarks/>
    public StreamManagementProfile EndGetStreamManagementProfile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((StreamManagementProfile)(results[0]));
    }
    
    /// <remarks/>
    public void GetStreamManagementProfileAsync(PrincipalIdentifier principalId, StreamManagementProfileType profileType) {
        this.GetStreamManagementProfileAsync(principalId, profileType, null);
    }
    
    /// <remarks/>
    public void GetStreamManagementProfileAsync(PrincipalIdentifier principalId, StreamManagementProfileType profileType, object userState) {
        if ((this.GetStreamManagementProfileOperationCompleted == null)) {
            this.GetStreamManagementProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStreamManagementProfileOperationCompleted);
        }
        this.InvokeAsync("GetStreamManagementProfile", new object[] {
                    principalId,
                    profileType}, this.GetStreamManagementProfileOperationCompleted, userState);
    }
    
    private void OnGetStreamManagementProfileOperationCompleted(object arg) {
        if ((this.GetStreamManagementProfileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetStreamManagementProfileCompleted(this, new GetStreamManagementProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/RemoveStreamManagementProfile", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveStreamManagementProfile(PrincipalIdentifier principalId, StreamManagementProfileType profileType) {
        this.Invoke("RemoveStreamManagementProfile", new object[] {
                    principalId,
                    profileType});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveStreamManagementProfile(PrincipalIdentifier principalId, StreamManagementProfileType profileType, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveStreamManagementProfile", new object[] {
                    principalId,
                    profileType}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveStreamManagementProfile(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveStreamManagementProfileAsync(PrincipalIdentifier principalId, StreamManagementProfileType profileType) {
        this.RemoveStreamManagementProfileAsync(principalId, profileType, null);
    }
    
    /// <remarks/>
    public void RemoveStreamManagementProfileAsync(PrincipalIdentifier principalId, StreamManagementProfileType profileType, object userState) {
        if ((this.RemoveStreamManagementProfileOperationCompleted == null)) {
            this.RemoveStreamManagementProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveStreamManagementProfileOperationCompleted);
        }
        this.InvokeAsync("RemoveStreamManagementProfile", new object[] {
                    principalId,
                    profileType}, this.RemoveStreamManagementProfileOperationCompleted, userState);
    }
    
    private void OnRemoveStreamManagementProfileOperationCompleted(object arg) {
        if ((this.RemoveStreamManagementProfileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveStreamManagementProfileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/SetStreamManagementProfile", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void SetStreamManagementProfile(PrincipalIdentifier principalId, StreamManagementProfileType profileType, StreamManagementProfile profileValue) {
        this.Invoke("SetStreamManagementProfile", new object[] {
                    principalId,
                    profileType,
                    profileValue});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetStreamManagementProfile(PrincipalIdentifier principalId, StreamManagementProfileType profileType, StreamManagementProfile profileValue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetStreamManagementProfile", new object[] {
                    principalId,
                    profileType,
                    profileValue}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetStreamManagementProfile(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetStreamManagementProfileAsync(PrincipalIdentifier principalId, StreamManagementProfileType profileType, StreamManagementProfile profileValue) {
        this.SetStreamManagementProfileAsync(principalId, profileType, profileValue, null);
    }
    
    /// <remarks/>
    public void SetStreamManagementProfileAsync(PrincipalIdentifier principalId, StreamManagementProfileType profileType, StreamManagementProfile profileValue, object userState) {
        if ((this.SetStreamManagementProfileOperationCompleted == null)) {
            this.SetStreamManagementProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetStreamManagementProfileOperationCompleted);
        }
        this.InvokeAsync("SetStreamManagementProfile", new object[] {
                    principalId,
                    profileType,
                    profileValue}, this.SetStreamManagementProfileOperationCompleted, userState);
    }
    
    private void OnSetStreamManagementProfileOperationCompleted(object arg) {
        if ((this.SetStreamManagementProfileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetStreamManagementProfileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/GetGroupMemberships", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("GetGroupMembershipsResult")]
    public GroupMembership[] GetGroupMemberships(PrincipalIdentifier principalId) {
        object[] results = this.Invoke("GetGroupMemberships", new object[] {
                    principalId});
        return ((GroupMembership[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetGroupMemberships(PrincipalIdentifier principalId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetGroupMemberships", new object[] {
                    principalId}, callback, asyncState);
    }
    
    /// <remarks/>
    public GroupMembership[] EndGetGroupMemberships(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((GroupMembership[])(results[0]));
    }
    
    /// <remarks/>
    public void GetGroupMembershipsAsync(PrincipalIdentifier principalId) {
        this.GetGroupMembershipsAsync(principalId, null);
    }
    
    /// <remarks/>
    public void GetGroupMembershipsAsync(PrincipalIdentifier principalId, object userState) {
        if ((this.GetGroupMembershipsOperationCompleted == null)) {
            this.GetGroupMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupMembershipsOperationCompleted);
        }
        this.InvokeAsync("GetGroupMemberships", new object[] {
                    principalId}, this.GetGroupMembershipsOperationCompleted, userState);
    }
    
    private void OnGetGroupMembershipsOperationCompleted(object arg) {
        if ((this.GetGroupMembershipsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetGroupMembershipsCompleted(this, new GetGroupMembershipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/RemoveGroupMemberships", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveGroupMemberships(PrincipalIdentifier principalId, [System.Xml.Serialization.XmlElementAttribute("groupIds")] GroupPrincipalExternalId[] groupIds) {
        this.Invoke("RemoveGroupMemberships", new object[] {
                    principalId,
                    groupIds});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoveGroupMemberships(PrincipalIdentifier principalId, GroupPrincipalExternalId[] groupIds, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveGroupMemberships", new object[] {
                    principalId,
                    groupIds}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoveGroupMemberships(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoveGroupMembershipsAsync(PrincipalIdentifier principalId, GroupPrincipalExternalId[] groupIds) {
        this.RemoveGroupMembershipsAsync(principalId, groupIds, null);
    }
    
    /// <remarks/>
    public void RemoveGroupMembershipsAsync(PrincipalIdentifier principalId, GroupPrincipalExternalId[] groupIds, object userState) {
        if ((this.RemoveGroupMembershipsOperationCompleted == null)) {
            this.RemoveGroupMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGroupMembershipsOperationCompleted);
        }
        this.InvokeAsync("RemoveGroupMemberships", new object[] {
                    principalId,
                    groupIds}, this.RemoveGroupMembershipsOperationCompleted, userState);
    }
    
    private void OnRemoveGroupMembershipsOperationCompleted(object arg) {
        if ((this.RemoveGroupMembershipsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveGroupMembershipsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/SetGroupMemberships", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void SetGroupMemberships(PrincipalIdentifier principalId, [System.Xml.Serialization.XmlElementAttribute("groupIds")] GroupPrincipalExternalId[] groupIds) {
        this.Invoke("SetGroupMemberships", new object[] {
                    principalId,
                    groupIds});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetGroupMemberships(PrincipalIdentifier principalId, GroupPrincipalExternalId[] groupIds, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetGroupMemberships", new object[] {
                    principalId,
                    groupIds}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetGroupMemberships(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetGroupMembershipsAsync(PrincipalIdentifier principalId, GroupPrincipalExternalId[] groupIds) {
        this.SetGroupMembershipsAsync(principalId, groupIds, null);
    }
    
    /// <remarks/>
    public void SetGroupMembershipsAsync(PrincipalIdentifier principalId, GroupPrincipalExternalId[] groupIds, object userState) {
        if ((this.SetGroupMembershipsOperationCompleted == null)) {
            this.SetGroupMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGroupMembershipsOperationCompleted);
        }
        this.InvokeAsync("SetGroupMemberships", new object[] {
                    principalId,
                    groupIds}, this.SetGroupMembershipsOperationCompleted, userState);
    }
    
    private void OnSetGroupMembershipsOperationCompleted(object arg) {
        if ((this.SetGroupMembershipsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetGroupMembershipsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/AddGroupMemberships", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void AddGroupMemberships(PrincipalIdentifier principalId, [System.Xml.Serialization.XmlElementAttribute("groupIds")] GroupPrincipalExternalId[] groupIds) {
        this.Invoke("AddGroupMemberships", new object[] {
                    principalId,
                    groupIds});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddGroupMemberships(PrincipalIdentifier principalId, GroupPrincipalExternalId[] groupIds, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddGroupMemberships", new object[] {
                    principalId,
                    groupIds}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndAddGroupMemberships(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void AddGroupMembershipsAsync(PrincipalIdentifier principalId, GroupPrincipalExternalId[] groupIds) {
        this.AddGroupMembershipsAsync(principalId, groupIds, null);
    }
    
    /// <remarks/>
    public void AddGroupMembershipsAsync(PrincipalIdentifier principalId, GroupPrincipalExternalId[] groupIds, object userState) {
        if ((this.AddGroupMembershipsOperationCompleted == null)) {
            this.AddGroupMembershipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupMembershipsOperationCompleted);
        }
        this.InvokeAsync("AddGroupMemberships", new object[] {
                    principalId,
                    groupIds}, this.AddGroupMembershipsOperationCompleted, userState);
    }
    
    private void OnAddGroupMembershipsOperationCompleted(object arg) {
        if ((this.AddGroupMembershipsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddGroupMembershipsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/ReadAllGroups", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Group1[] ReadAllGroups() {
        object[] results = this.Invoke("ReadAllGroups", new object[0]);
        return ((Group1[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadAllGroups(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadAllGroups", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public Group1[] EndReadAllGroups(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Group1[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadAllGroupsAsync() {
        this.ReadAllGroupsAsync(null);
    }
    
    /// <remarks/>
    public void ReadAllGroupsAsync(object userState) {
        if ((this.ReadAllGroupsOperationCompleted == null)) {
            this.ReadAllGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAllGroupsOperationCompleted);
        }
        this.InvokeAsync("ReadAllGroups", new object[0], this.ReadAllGroupsOperationCompleted, userState);
    }
    
    private void OnReadAllGroupsOperationCompleted(object arg) {
        if ((this.ReadAllGroupsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadAllGroupsCompleted(this, new ReadAllGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/ReadGroups", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Group1[] ReadGroups([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] string[] groupId) {
        object[] results = this.Invoke("ReadGroups", new object[] {
                    groupId});
        return ((Group1[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadGroups(string[] groupId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadGroups", new object[] {
                    groupId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Group1[] EndReadGroups(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Group1[])(results[0]));
    }
    
    /// <remarks/>
    public void ReadGroupsAsync(string[] groupId) {
        this.ReadGroupsAsync(groupId, null);
    }
    
    /// <remarks/>
    public void ReadGroupsAsync(string[] groupId, object userState) {
        if ((this.ReadGroupsOperationCompleted == null)) {
            this.ReadGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadGroupsOperationCompleted);
        }
        this.InvokeAsync("ReadGroups", new object[] {
                    groupId}, this.ReadGroupsOperationCompleted, userState);
    }
    
    private void OnReadGroupsOperationCompleted(object arg) {
        if ((this.ReadGroupsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadGroupsCompleted(this, new ReadGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/NewUpgradeGroup", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void NewUpgradeGroup(GroupPrincipalExternalId groupExternalId) {
        this.Invoke("NewUpgradeGroup", new object[] {
                    groupExternalId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginNewUpgradeGroup(GroupPrincipalExternalId groupExternalId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("NewUpgradeGroup", new object[] {
                    groupExternalId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndNewUpgradeGroup(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void NewUpgradeGroupAsync(GroupPrincipalExternalId groupExternalId) {
        this.NewUpgradeGroupAsync(groupExternalId, null);
    }
    
    /// <remarks/>
    public void NewUpgradeGroupAsync(GroupPrincipalExternalId groupExternalId, object userState) {
        if ((this.NewUpgradeGroupOperationCompleted == null)) {
            this.NewUpgradeGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewUpgradeGroupOperationCompleted);
        }
        this.InvokeAsync("NewUpgradeGroup", new object[] {
                    groupExternalId}, this.NewUpgradeGroupOperationCompleted, userState);
    }
    
    private void OnNewUpgradeGroupOperationCompleted(object arg) {
        if ((this.NewUpgradeGroupCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.NewUpgradeGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/SetUpgradeGroupVersion", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void SetUpgradeGroupVersion(GroupPrincipalExternalId groupExternalId, string version) {
        this.Invoke("SetUpgradeGroupVersion", new object[] {
                    groupExternalId,
                    version});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetUpgradeGroupVersion(GroupPrincipalExternalId groupExternalId, string version, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetUpgradeGroupVersion", new object[] {
                    groupExternalId,
                    version}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetUpgradeGroupVersion(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetUpgradeGroupVersionAsync(GroupPrincipalExternalId groupExternalId, string version) {
        this.SetUpgradeGroupVersionAsync(groupExternalId, version, null);
    }
    
    /// <remarks/>
    public void SetUpgradeGroupVersionAsync(GroupPrincipalExternalId groupExternalId, string version, object userState) {
        if ((this.SetUpgradeGroupVersionOperationCompleted == null)) {
            this.SetUpgradeGroupVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUpgradeGroupVersionOperationCompleted);
        }
        this.InvokeAsync("SetUpgradeGroupVersion", new object[] {
                    groupExternalId,
                    version}, this.SetUpgradeGroupVersionOperationCompleted, userState);
    }
    
    private void OnSetUpgradeGroupVersionOperationCompleted(object arg) {
        if ((this.SetUpgradeGroupVersionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetUpgradeGroupVersionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/GetUpgradeGroups", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UpgradeGroup[] GetUpgradeGroups() {
        object[] results = this.Invoke("GetUpgradeGroups", new object[0]);
        return ((UpgradeGroup[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUpgradeGroups(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUpgradeGroups", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public UpgradeGroup[] EndGetUpgradeGroups(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UpgradeGroup[])(results[0]));
    }
    
    /// <remarks/>
    public void GetUpgradeGroupsAsync() {
        this.GetUpgradeGroupsAsync(null);
    }
    
    /// <remarks/>
    public void GetUpgradeGroupsAsync(object userState) {
        if ((this.GetUpgradeGroupsOperationCompleted == null)) {
            this.GetUpgradeGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpgradeGroupsOperationCompleted);
        }
        this.InvokeAsync("GetUpgradeGroups", new object[0], this.GetUpgradeGroupsOperationCompleted, userState);
    }
    
    private void OnGetUpgradeGroupsOperationCompleted(object arg) {
        if ((this.GetUpgradeGroupsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUpgradeGroupsCompleted(this, new GetUpgradeGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/GetUpgradeGroup", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public UpgradeGroup GetUpgradeGroup(GroupPrincipalExternalId groupExternalId) {
        object[] results = this.Invoke("GetUpgradeGroup", new object[] {
                    groupExternalId});
        return ((UpgradeGroup)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUpgradeGroup(GroupPrincipalExternalId groupExternalId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUpgradeGroup", new object[] {
                    groupExternalId}, callback, asyncState);
    }
    
    /// <remarks/>
    public UpgradeGroup EndGetUpgradeGroup(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UpgradeGroup)(results[0]));
    }
    
    /// <remarks/>
    public void GetUpgradeGroupAsync(GroupPrincipalExternalId groupExternalId) {
        this.GetUpgradeGroupAsync(groupExternalId, null);
    }
    
    /// <remarks/>
    public void GetUpgradeGroupAsync(GroupPrincipalExternalId groupExternalId, object userState) {
        if ((this.GetUpgradeGroupOperationCompleted == null)) {
            this.GetUpgradeGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpgradeGroupOperationCompleted);
        }
        this.InvokeAsync("GetUpgradeGroup", new object[] {
                    groupExternalId}, this.GetUpgradeGroupOperationCompleted, userState);
    }
    
    private void OnGetUpgradeGroupOperationCompleted(object arg) {
        if ((this.GetUpgradeGroupCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUpgradeGroupCompleted(this, new GetUpgradeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microsoft.com/iptv/bss2/GetDeviceVersionStack", RequestNamespace="http://www.microsoft.com/iptv/bss2", ResponseNamespace="http://www.microsoft.com/iptv/bss2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public VersionStack GetDeviceVersionStack(DevicePrincipalExternalId deviceExternalId) {
        object[] results = this.Invoke("GetDeviceVersionStack", new object[] {
                    deviceExternalId});
        return ((VersionStack)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetDeviceVersionStack(DevicePrincipalExternalId deviceExternalId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetDeviceVersionStack", new object[] {
                    deviceExternalId}, callback, asyncState);
    }
    
    /// <remarks/>
    public VersionStack EndGetDeviceVersionStack(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((VersionStack)(results[0]));
    }
    
    /// <remarks/>
    public void GetDeviceVersionStackAsync(DevicePrincipalExternalId deviceExternalId) {
        this.GetDeviceVersionStackAsync(deviceExternalId, null);
    }
    
    /// <remarks/>
    public void GetDeviceVersionStackAsync(DevicePrincipalExternalId deviceExternalId, object userState) {
        if ((this.GetDeviceVersionStackOperationCompleted == null)) {
            this.GetDeviceVersionStackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceVersionStackOperationCompleted);
        }
        this.InvokeAsync("GetDeviceVersionStack", new object[] {
                    deviceExternalId}, this.GetDeviceVersionStackOperationCompleted, userState);
    }
    
    private void OnGetDeviceVersionStackOperationCompleted(object arg) {
        if ((this.GetDeviceVersionStackCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetDeviceVersionStackCompleted(this, new GetDeviceVersionStackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public partial class Group : Principal {
    
    private string typeField;
    
    private Principal[] principalsField;
    
    /// <remarks/>
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItemAttribute(typeof(Account))]
    [System.Xml.Serialization.XmlArrayItemAttribute(typeof(Device))]
    public Principal[] Principals {
        get {
            return this.principalsField;
        }
        set {
            this.principalsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public partial class Account : Principal {
    
    private Device[] devicesField;
    
    private User[] usersField;
    
    private double creditLimitField;
    
    private TimeZonesEnumeration timeZoneField;
    
    private int hDStreamsField;
    
    private bool hDStreamsFieldSpecified;
    
    private int sDStreamsField;
    
    private bool sDStreamsFieldSpecified;
    
    private bool dVREnabledField;
    
    private bool dVREnabledFieldSpecified;
    
    private System.Guid recordingDeviceIdField;
    
    private bool recordingDeviceIdFieldSpecified;
    
    private string pinField;
    
    private string serviceGroupNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    public Device[] Devices {
        get {
            return this.devicesField;
        }
        set {
            this.devicesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    public User[] Users {
        get {
            return this.usersField;
        }
        set {
            this.usersField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public double CreditLimit {
        get {
            return this.creditLimitField;
        }
        set {
            this.creditLimitField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public TimeZonesEnumeration TimeZone {
        get {
            return this.timeZoneField;
        }
        set {
            this.timeZoneField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int HDStreams {
        get {
            return this.hDStreamsField;
        }
        set {
            this.hDStreamsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HDStreamsSpecified {
        get {
            return this.hDStreamsFieldSpecified;
        }
        set {
            this.hDStreamsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int SDStreams {
        get {
            return this.sDStreamsField;
        }
        set {
            this.sDStreamsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SDStreamsSpecified {
        get {
            return this.sDStreamsFieldSpecified;
        }
        set {
            this.sDStreamsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool DVREnabled {
        get {
            return this.dVREnabledField;
        }
        set {
            this.dVREnabledField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DVREnabledSpecified {
        get {
            return this.dVREnabledFieldSpecified;
        }
        set {
            this.dVREnabledFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.Guid RecordingDeviceId {
        get {
            return this.recordingDeviceIdField;
        }
        set {
            this.recordingDeviceIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RecordingDeviceIdSpecified {
        get {
            return this.recordingDeviceIdFieldSpecified;
        }
        set {
            this.recordingDeviceIdFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Pin {
        get {
            return this.pinField;
        }
        set {
            this.pinField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ServiceGroupName {
        get {
            return this.serviceGroupNameField;
        }
        set {
            this.serviceGroupNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public partial class Device : Principal {
    
    private string accountExternalIdField;
    
    private string pinField;
    
    private System.Guid idField;
    
    private string versionField;
    
    private string requestedVersionField;
    
    private string resolvedVersionField;
    
    private string lastReportedVersionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AccountExternalId {
        get {
            return this.accountExternalIdField;
        }
        set {
            this.accountExternalIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Pin {
        get {
            return this.pinField;
        }
        set {
            this.pinField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.Guid ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RequestedVersion {
        get {
            return this.requestedVersionField;
        }
        set {
            this.requestedVersionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ResolvedVersion {
        get {
            return this.resolvedVersionField;
        }
        set {
            this.resolvedVersionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string LastReportedVersion {
        get {
            return this.lastReportedVersionField;
        }
        set {
            this.lastReportedVersionField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(SubscriberGroup))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(User))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Device))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Account))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Group))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public abstract partial class Principal {
    
    private string externalIDField;
    
    private PrincipalStatus statusField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ExternalID {
        get {
            return this.externalIDField;
        }
        set {
            this.externalIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public PrincipalStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public enum PrincipalStatus {
    
    /// <remarks/>
    enabled,
    
    /// <remarks/>
    disabled,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class VersionStack {
    
    private UpgradeGroup branchField;
    
    private UpgradeGroup serviceGroupField;
    
    private UpgradeGroup accountGroupField;
    
    private UpgradeGroup deviceGroupField;
    
    private string deviceVersionField;
    
    /// <remarks/>
    public UpgradeGroup Branch {
        get {
            return this.branchField;
        }
        set {
            this.branchField = value;
        }
    }
    
    /// <remarks/>
    public UpgradeGroup ServiceGroup {
        get {
            return this.serviceGroupField;
        }
        set {
            this.serviceGroupField = value;
        }
    }
    
    /// <remarks/>
    public UpgradeGroup AccountGroup {
        get {
            return this.accountGroupField;
        }
        set {
            this.accountGroupField = value;
        }
    }
    
    /// <remarks/>
    public UpgradeGroup DeviceGroup {
        get {
            return this.deviceGroupField;
        }
        set {
            this.deviceGroupField = value;
        }
    }
    
    /// <remarks/>
    public string DeviceVersion {
        get {
            return this.deviceVersionField;
        }
        set {
            this.deviceVersionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class UpgradeGroup : Group1 {
    
    private uint subtypeField;
    
    private string versionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint Subtype {
        get {
            return this.subtypeField;
        }
        set {
            this.subtypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpgradeGroup))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="Group", Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class Group1 : Principal1 {
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Group1))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpgradeGroup))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="Principal", Namespace="http://www.microsoft.com/iptv/bss2")]
public abstract partial class Principal1 {
    
    private string externalIDField;
    
    private PrincipalStatus1 statusField;
    
    private bool statusFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ExternalID {
        get {
            return this.externalIDField;
        }
        set {
            this.externalIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public PrincipalStatus1 Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool StatusSpecified {
        get {
            return this.statusFieldSpecified;
        }
        set {
            this.statusFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="PrincipalStatus", Namespace="http://www.microsoft.com/iptv/bss2")]
public enum PrincipalStatus1 {
    
    /// <remarks/>
    enabled,
    
    /// <remarks/>
    disabled,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class GroupMembership {
    
    private GroupPrincipalExternalId groupExternalIdField;
    
    /// <remarks/>
    public GroupPrincipalExternalId GroupExternalId {
        get {
            return this.groupExternalIdField;
        }
        set {
            this.groupExternalIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class GroupPrincipalExternalId : PrincipalIdentifier {
    
    private string idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountPrincipalExternalId))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceGuidPrincipalId))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GroupPrincipalExternalId))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DevicePrincipalExternalId))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public abstract partial class PrincipalIdentifier {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class AccountPrincipalExternalId : PrincipalIdentifier {
    
    private string idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class DeviceGuidPrincipalId : PrincipalIdentifier {
    
    private System.Guid idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.Guid Id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class DevicePrincipalExternalId : PrincipalIdentifier {
    
    private string idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class StreamManagementProfile {
    
    private uint iPTVHDStreamsField;
    
    private uint iPTVSDStreamsField;
    
    private uint dTTStreamsField;
    
    private uint maxBitRateField;
    
    /// <remarks/>
    public uint IPTVHDStreams {
        get {
            return this.iPTVHDStreamsField;
        }
        set {
            this.iPTVHDStreamsField = value;
        }
    }
    
    /// <remarks/>
    public uint IPTVSDStreams {
        get {
            return this.iPTVSDStreamsField;
        }
        set {
            this.iPTVSDStreamsField = value;
        }
    }
    
    /// <remarks/>
    public uint DTTStreams {
        get {
            return this.dTTStreamsField;
        }
        set {
            this.dTTStreamsField = value;
        }
    }
    
    /// <remarks/>
    public uint MaxBitRate {
        get {
            return this.maxBitRateField;
        }
        set {
            this.maxBitRateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class GRCMembership {
    
    private byte groupSetIdField;
    
    private byte groupIdField;
    
    /// <remarks/>
    public byte GroupSetId {
        get {
            return this.groupSetIdField;
        }
        set {
            this.groupSetIdField = value;
        }
    }
    
    /// <remarks/>
    public byte GroupId {
        get {
            return this.groupIdField;
        }
        set {
            this.groupIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class PrincipalGRCMembership {
    
    private AccountPrincipalExternalId principalField;
    
    private GRCMembership[] membershipField;
    
    /// <remarks/>
    public AccountPrincipalExternalId Principal {
        get {
            return this.principalField;
        }
        set {
            this.principalField = value;
        }
    }
    
    /// <remarks/>
    public GRCMembership[] Membership {
        get {
            return this.membershipField;
        }
        set {
            this.membershipField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public partial class UserstoreNameValue {
    
    private string keyField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public partial class StreamAllocation {
    
    private int sDStreamsField;
    
    private int hDStreamsField;
    
    /// <remarks/>
    public int SDStreams {
        get {
            return this.sDStreamsField;
        }
        set {
            this.sDStreamsField = value;
        }
    }
    
    /// <remarks/>
    public int HDStreams {
        get {
            return this.hDStreamsField;
        }
        set {
            this.hDStreamsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public partial class AccountValue {
    
    private string keyField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public partial class DeviceValue {
    
    private string keyField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public partial class PinInfo {
    
    private string pinField;
    
    private short pinTypeField;
    
    private System.DateTime enableDateField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Pin {
        get {
            return this.pinField;
        }
        set {
            this.pinField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public short PinType {
        get {
            return this.pinTypeField;
        }
        set {
            this.pinTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.DateTime EnableDate {
        get {
            return this.enableDateField;
        }
        set {
            this.enableDateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public partial class SubscriberGroup : Principal {
    
    private System.Guid groupIdField;
    
    private string nameField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.Guid GroupId {
        get {
            return this.groupIdField;
        }
        set {
            this.groupIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public partial class User : Principal {
    
    private string pinField;
    
    private string accountExternalIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Pin {
        get {
            return this.pinField;
        }
        set {
            this.pinField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AccountExternalId {
        get {
            return this.accountExternalIdField;
        }
        set {
            this.accountExternalIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public enum TimeZonesEnumeration {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    GMT_Minus_1200_InternationalDateLineWest,
    
    /// <remarks/>
    GMT_Minus_1100_MidwayIsland_Samoa,
    
    /// <remarks/>
    GMT_Minus_1000_Hawaii,
    
    /// <remarks/>
    GMT_Minus_0900_Alaska,
    
    /// <remarks/>
    GMT_Minus_0800_PacificTimeUSAndCanada_Tijuana,
    
    /// <remarks/>
    GMT_Minus_0700_Arizona,
    
    /// <remarks/>
    GMT_Minus_0700_Chihuahua_LaPaz_Mazatlan,
    
    /// <remarks/>
    GMT_Minus_0700_MountainTimeUSAndCanada,
    
    /// <remarks/>
    GMT_Minus_0600_CentralAmerica,
    
    /// <remarks/>
    GMT_Minus_0600_CentralTimeUSAndCanada,
    
    /// <remarks/>
    GMT_Minus_0600_Guadalajara_MexicoCity_Monterrey,
    
    /// <remarks/>
    GMT_Minus_0600_Saskatchewan,
    
    /// <remarks/>
    GMT_Minus_0500_Bogota_Lima_Quito,
    
    /// <remarks/>
    GMT_Minus_0500_EasternTimeUSAndCanada,
    
    /// <remarks/>
    GMT_Minus_0500_IndianaEast,
    
    /// <remarks/>
    GMT_Minus_0400_AtlanticTimeCanada,
    
    /// <remarks/>
    GMT_Minus_0400_Caracas_LaPaz,
    
    /// <remarks/>
    GMT_Minus_0400_Santiago,
    
    /// <remarks/>
    GMT_Minus_0330_Newfoundland,
    
    /// <remarks/>
    GMT_Minus_0300_Brasilia,
    
    /// <remarks/>
    GMT_Minus_0300_Buenos_Aires_Georgetown,
    
    /// <remarks/>
    GMT_Minus_0300_Greenland,
    
    /// <remarks/>
    GMT_Minus_0200_MidAtlantic,
    
    /// <remarks/>
    GMT_Minus_0100_Azores,
    
    /// <remarks/>
    GMT_Minus_0100_Cape_Verde_Is,
    
    /// <remarks/>
    GMT_Casablanca_Monrovia,
    
    /// <remarks/>
    GMT_GreenwichMeanTime_Dublin_Edinburgh_Lisbon_London,
    
    /// <remarks/>
    GMT_Plus_0100_Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna,
    
    /// <remarks/>
    GMT_Plus_0100_Belgrade_Bratislava_Budapest_Ljubljana_Prague,
    
    /// <remarks/>
    GMT_Plus_0100_Brussels_Copenhagen_Madrid_Paris,
    
    /// <remarks/>
    GMT_Plus_0100_Sarajevo_Skopje_Warsaw_Zagreb,
    
    /// <remarks/>
    GMT_Plus_0100_WestCentralAfrica,
    
    /// <remarks/>
    GMT_Plus_0200_Athens_Beirut_Istanbul_Minsk,
    
    /// <remarks/>
    GMT_Plus_0200_Bucharest,
    
    /// <remarks/>
    GMT_Plus_0200_Cairo,
    
    /// <remarks/>
    GMT_Plus_0200_Harare_Pretoria,
    
    /// <remarks/>
    GMT_Plus_0200_Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius,
    
    /// <remarks/>
    GMT_Plus_0200_Jerusalem,
    
    /// <remarks/>
    GMT_Plus_0300_Baghdad,
    
    /// <remarks/>
    GMT_Plus_0300_Kuwait_Riyadh,
    
    /// <remarks/>
    GMT_Plus_0300_Moscow_StPetersbug_Volgograd,
    
    /// <remarks/>
    GMT_Plus_0300_Nairobi,
    
    /// <remarks/>
    GMT_Plus_0330_Tehran,
    
    /// <remarks/>
    GMT_Plus_0400_AbuDhabi_Muscat,
    
    /// <remarks/>
    GMT_Plus_0400_Baku_Tbilsi_Yerevan,
    
    /// <remarks/>
    GMT_Plus_0430_Kabul,
    
    /// <remarks/>
    GMT_Plus_0500_Ekaterinburg,
    
    /// <remarks/>
    GMT_Plus_0500_Islamabad_Karachi_Tashkent,
    
    /// <remarks/>
    GMT_Plus_0530_Chennai_Kolkata_Mumbai_NewDelhi,
    
    /// <remarks/>
    GMT_Plus_0545_Kathmandu,
    
    /// <remarks/>
    GMT_Plus_0600_Almaty_Novosibirsk,
    
    /// <remarks/>
    GMT_Plus_0600_Astana_Dhaka,
    
    /// <remarks/>
    GMT_Plus_0600_SriJayawardenepura,
    
    /// <remarks/>
    GMT_Plus_0630_Rangoon,
    
    /// <remarks/>
    GMT_Plus_0700_Bangkok_Hanoi_Jakarta,
    
    /// <remarks/>
    GMT_Plus_0700_Kransnoyarsk,
    
    /// <remarks/>
    GMT_Plus_0800_Beijing_Chongqing_HongKong_Urumqi,
    
    /// <remarks/>
    GMT_Plus_0800_Irkutsk_UlaanBataar,
    
    /// <remarks/>
    GMT_Plus_0800_KualaLumpur_Singapore,
    
    /// <remarks/>
    GMT_Plus_0800_Perth,
    
    /// <remarks/>
    GMT_Plus_0800_Taipei,
    
    /// <remarks/>
    GMT_Plus_0900_Osaka_Sapporo_Tokyo,
    
    /// <remarks/>
    GMT_Plus_0900_Seoul,
    
    /// <remarks/>
    GMT_Plus_0900_Yakutsk,
    
    /// <remarks/>
    GMT_Plus_0930_Adelaide,
    
    /// <remarks/>
    GMT_Plus_0930_Darwin,
    
    /// <remarks/>
    GMT_Plus_1000_Brisbane,
    
    /// <remarks/>
    GMT_Plus_1000_Canberra_Melbourne_Sydney,
    
    /// <remarks/>
    GMT_Plus_1000_Guam_PortMoresby,
    
    /// <remarks/>
    GMT_Plus_1000_Hobart,
    
    /// <remarks/>
    GMT_Plus_1000_Vladivostok,
    
    /// <remarks/>
    GMT_Plus_1100_Magadan_SolomonIs_NewCaledonia,
    
    /// <remarks/>
    GMT_Plus_1200_Auckland_Wellington,
    
    /// <remarks/>
    GMT_Plus_1200_Fiji_Kamchatka_MarshallIs,
    
    /// <remarks/>
    GMT_Plus_1300_Nuku_alofa,
    
    /// <remarks/>
    GMT_Minus_0800_Tijuana_Baja_California,
    
    /// <remarks/>
    GMT_Minus_0300_Montevideo_Uruguay,
    
    /// <remarks/>
    GMT_Plus_1200_Magadan,
    
    /// <remarks/>
    GMT_Plus_0300_Kaliningrad,
    
    /// <remarks/>
    GMT_Minus_1100_Coordinated_Universal_Time_Minus_11,
    
    /// <remarks/>
    GMT_Minus_0430_Caracas,
    
    /// <remarks/>
    GMT_Minus_0400_Asuncion,
    
    /// <remarks/>
    GMT_Minus_0400_Cuiaba,
    
    /// <remarks/>
    GMT_Minus_0300_Buenos_Aires,
    
    /// <remarks/>
    GMT_Minus_0300_Salvador,
    
    /// <remarks/>
    GMT_Minus_0200_Coordinated_Universal_Time_Minus_02,
    
    /// <remarks/>
    GMT_Casablanca,
    
    /// <remarks/>
    GMT_Coordinated_Universal_Time,
    
    /// <remarks/>
    GMT_Plus_0100_Windhoek,
    
    /// <remarks/>
    GMT_Plus_0200_Amman,
    
    /// <remarks/>
    GMT_Plus_0200_Beirut,
    
    /// <remarks/>
    GMT_Plus_0200_Damascus,
    
    /// <remarks/>
    GMT_Plus_0200_Istanbul,
    
    /// <remarks/>
    GMT_Plus_0400_Baku,
    
    /// <remarks/>
    GMT_Plus_0400_Port_Louis,
    
    /// <remarks/>
    GMT_Plus_0400_Tbilisi,
    
    /// <remarks/>
    GMT_Plus_0500_Islamabad_Karachi,
    
    /// <remarks/>
    GMT_Plus_0600_Dhaka,
    
    /// <remarks/>
    GMT_Plus_0800_Ulaanbaatar,
    
    /// <remarks/>
    GMT_Plus_1200_Coordinated_Universal_Time_Plus_12,
    
    /// <remarks/>
    GMT_Plus_1200_Petropavlovsk_Kamchatsky_Old,
    
    /// <remarks/>
    GMT_Plus_0200_Tripoli,
    
    /// <remarks/>
    GMT_Plus_0300_Minsk,
    
    /// <remarks/>
    GMT_Plus_0400_Izhevsk_Samara_RTZ_3,
    
    /// <remarks/>
    GMT_Plus_1100_Chokurdakh_RTZ_10,
    
    /// <remarks/>
    GMT_Plus_1200_Anadyr_Petropavlovsk_Kamchatsky_RTZ_11,
    
    /// <remarks/>
    GMT_Plus_1400_Kiritimati_Island,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss")]
public enum PinStatus {
    
    /// <remarks/>
    NoError,
    
    /// <remarks/>
    Forbidden,
    
    /// <remarks/>
    NoMatch,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microsoft.com/iptv/bss2")]
public enum StreamManagementProfileType {
    
    /// <remarks/>
    IngressProfile,
    
    /// <remarks/>
    EgressProfile,
    
    /// <remarks/>
    WANProfile,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void CreateGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void DeleteGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadGroupCompletedEventHandler(object sender, ReadGroupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Group[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Group[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateGroupStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateGroupTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateGroupPrincipalsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void CreateAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void DeleteAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadAccountCompletedEventHandler(object sender, ReadAccountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Account[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Account[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountDevicesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountUsersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountPinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountCreditLimitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountTimeZoneCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountDVRStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountRecordingDeviceIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountHDStreamsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountSDStreamsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountExternalIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ProvisionDeviceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void DeleteUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadUserCompletedEventHandler(object sender, ReadUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public User[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((User[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateUserPinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateUserStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateDeviceStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateDeviceExternalIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateDevicePinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateDevicePinByTypeCompletedEventHandler(object sender, UpdateDevicePinByTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateDevicePinByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateDevicePinByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public PinStatus Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((PinStatus)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void DeleteDevicePinByTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void DeleteDevicePinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateForbiddenPinsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadDevicePinsCompletedEventHandler(object sender, ReadDevicePinsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadDevicePinsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadDevicePinsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public PinInfo[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((PinInfo[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadForbiddenPinsCompletedEventHandler(object sender, ReadForbiddenPinsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadForbiddenPinsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadForbiddenPinsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ResetDevicePinByTypeCompletedEventHandler(object sender, ResetDevicePinByTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ResetDevicePinByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ResetDevicePinByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public PinStatus Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((PinStatus)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateDeviceVersionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadAllDeviceValuesCompletedEventHandler(object sender, ReadAllDeviceValuesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadAllDeviceValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadAllDeviceValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public DeviceValue[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((DeviceValue[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void DeleteAllDeviceValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateDeviceValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateDeviceValuesAndNotifyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadDeviceCompletedEventHandler(object sender, ReadDeviceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Device[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Device[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadDeviceByGuidCompletedEventHandler(object sender, ReadDeviceByGuidCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadDeviceByGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadDeviceByGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Device Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Device)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateEnableDateForAllPinsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateEnableDateForPinByTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadDeviceGroupsCompletedEventHandler(object sender, ReadDeviceGroupsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadDeviceGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadDeviceGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SubscriberGroup[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SubscriberGroup[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadAccountGroupsCompletedEventHandler(object sender, ReadAccountGroupsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadAccountGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadAccountGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SubscriberGroup[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SubscriberGroup[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadAllAccountValuesCompletedEventHandler(object sender, ReadAllAccountValuesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadAllAccountValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadAllAccountValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public AccountValue[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((AccountValue[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void DeleteAccountValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountValuesAndNotifyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void DeleteAllAccountValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void DeleteAccountValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateAccountStreamAllocationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void RemoveDeviceValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void SetGlobalValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void RemoveGlobalValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void GetGlobalValueCompletedEventHandler(object sender, GetGlobalValueCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetGlobalValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetGlobalValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserstoreNameValue[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserstoreNameValue[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void UpdateGRCMembershipCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void SetGRCMembershipCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void RemoveGRCMembershipCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void GetGRCMembershipCompletedEventHandler(object sender, GetGRCMembershipCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetGRCMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetGRCMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public GRCMembership[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((GRCMembership[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void GetStreamManagementProfileCompletedEventHandler(object sender, GetStreamManagementProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetStreamManagementProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetStreamManagementProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public StreamManagementProfile Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((StreamManagementProfile)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void RemoveStreamManagementProfileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void SetStreamManagementProfileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void GetGroupMembershipsCompletedEventHandler(object sender, GetGroupMembershipsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetGroupMembershipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetGroupMembershipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public GroupMembership[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((GroupMembership[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void RemoveGroupMembershipsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void SetGroupMembershipsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void AddGroupMembershipsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadAllGroupsCompletedEventHandler(object sender, ReadAllGroupsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadAllGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadAllGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Group1[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Group1[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void ReadGroupsCompletedEventHandler(object sender, ReadGroupsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Group1[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Group1[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void NewUpgradeGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void SetUpgradeGroupVersionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void GetUpgradeGroupsCompletedEventHandler(object sender, GetUpgradeGroupsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUpgradeGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetUpgradeGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UpgradeGroup[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UpgradeGroup[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void GetUpgradeGroupCompletedEventHandler(object sender, GetUpgradeGroupCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUpgradeGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetUpgradeGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UpgradeGroup Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UpgradeGroup)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void GetDeviceVersionStackCompletedEventHandler(object sender, GetDeviceVersionStackCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetDeviceVersionStackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetDeviceVersionStackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public VersionStack Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((VersionStack)(this.results[0]));
        }
    }
}
